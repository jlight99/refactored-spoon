{"version":3,"sources":["SignInForm.jsx","SignIn.jsx","MyNavbar.jsx","FoodSearch.jsx","NutritionTable.jsx","EditableFood.jsx","EditMealForm.jsx","Food.jsx","Meal.jsx","Days.jsx","FoodSearchPage.jsx","App.js","serviceWorker.js","index.js"],"names":["SignInForm","props","useState","email","setEmail","password","setPassword","Form","onSubmit","event","preventDefault","handleSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","variant","getUserFromLocalStorage","localStorage","getItem","SignIn","history","useHistory","key","setKey","error","setError","a","fetch","method","headers","body","JSON","stringify","response","text","responseText","status","setItem","setAuthenticated","push","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","style","color","MyNavbar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","href","process","onClick","removeItem","NutrientIds","ENERGY","CALCIUM","IRON","VITAMIN_A","VITAMIN_C","PROTEIN","FAT","CARBOHYDRATE","SUGAR","FIBER","POTASSIUM","SODIUM","CHOLESTEROL","FoodSearch","foodKeyword","setFoodKeyword","searchResults","setSearchResults","loading","setLoading","handleSubmitSearch","getUSDASearchResults","keyword","food","pageSize","searchResultFdcIds","json","responseJSON","forEach","result","fdcId","totalPages","TotalPages","console","log","foods","foodsDetailRes","foodsDetailResJSON","usdaSearchResults","newUSDASearchResult","details","filter","detail","display","flexDirection","justifyContent","inline","margin","FormControl","flexWrap","Spinner","animation","map","searchResult","Card","border","width","Header","description","Body","brandOwner","ingredients","Table","marginTop","foodNutrients","foodNutrient","includes","nutrient","name","amount","unitName","showSelect","fdcIds","selectFood","checkNutritionExists","nutrition","Object","keys","length","constructor","NutritionTable","overflowY","overflowX","maxHeight","height","maxWidth","marginLeft","position","top","backgroundColor","float","calories","protein","carbs","fat","sugar","fiber","sodium","calcium","iron","cholesterol","potassium","vitaminA","vitaminC","EditableFood","displayNutritionInfo","setDisplayNutritionInfo","serving","e","updateServingSize","removeFood","_id","mealOptions","label","EditMealForm","meal","setFoods","mealName","setMealName","mealNutrition","setMealNutrition","setFdcIds","newServingSize","newFoods","oldFood","parseInt","getRoundedWholeNutrient","usdaNutrition","getRounded2DecNutrient","updateMealNutrition","servingSize","Math","round","removeFoodFromAddForm","garbageFdcId","removedFood","newMealNutrition","calculateNewMealNutrition","removeFoodFromEditForm","garbageId","updatedFood","sign","calculateNewNutrient","mealNutrient","borderStyle","borderWidth","padding","Dropdown","Menu","option","Item","foodDetails","newFood","brand","paddingTop","cancel","marginRight","formattedFoods","submit","Food","group","Meal","size","updateMeal","icon","faEdit","deleteMeal","faTrashAlt","Text","Days","day","setDay","Date","selectedDate","setSelectedDate","showAddMealForm","setShowAddMealForm","editMeal","setEditMeal","useEffect","fetchDay","date","getDay","fetchedDay","dateStr","getFullYear","getMonth","getUTCDate","submitAddMealForm","submitEditMealForm","mealId","selected","meals","j","FoodSearchPage","selectedFood","setSelectedFood","FdcId","App","isAuthenticated","setIsAuthenticated","basename","exact","path","render","to","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e6727429.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SignInForm(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.handleSubmit(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={handleEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SignInForm from './SignInForm';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function getUserFromLocalStorage() {\r\n    return localStorage.getItem('currentUser');\r\n}\r\n\r\nexport default function SignIn(props) {\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('login');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (email, password, type) => {\r\n        const response = await fetch('https://shielded-earth-02834.herokuapp.com/' + type, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            })\r\n        });\r\n\r\n        const responseText = await response.text();\r\n\r\n        if ((type === 'login' && response.status === 302) ||\r\n            (type === 'signup' && response.status === 201)) {\r\n            localStorage.setItem('currentUser', JSON.stringify(responseText));\r\n            props.setAuthenticated(true);\r\n            history.push('/days');\r\n        } else {\r\n            setError(\"error with \" + type + \"\\n\" + responseText);\r\n        }\r\n    };\r\n\r\n    const handleLoginSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'login');\r\n    };\r\n\r\n    const handleSignupSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'signup');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tabs\r\n                id=\"signin-tabs\"\r\n                activeKey={key}\r\n                onSelect={(k) => {\r\n                    setKey(k);\r\n                    setError('');\r\n                }}\r\n            >\r\n                <Tab eventKey=\"login\" title=\"Login\">\r\n                    <SignInForm\r\n                        handleSubmit={handleLoginSubmit}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"signup\" title=\"Sign Up\">\r\n                    <SignInForm\r\n                        handleSubmit={handleSignupSubmit}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n            {error && <div style={{ color: \"red\" }}>sign in unsuccessful :(</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MyNavbar(props) {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('currentUser');\r\n        props.setAuthenticated(false);\r\n        history.push('/signin');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand>Refactored Spoon</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/days\"}>Days</Nav.Link>\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/foodsearch\"}>Food Search</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            <Button variant=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n        </Navbar>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport const NutrientIds = {\r\n    ENERGY: 1008,\r\n    CALCIUM: 1087,\r\n    IRON: 1089,\r\n    VITAMIN_A: 1104,\r\n    VITAMIN_C: 1162,\r\n    PROTEIN: 1003,\r\n    FAT: 1004,\r\n    CARBOHYDRATE: 1005,\r\n    SUGAR: 2000,\r\n    FIBER: 1079,\r\n    POTASSIUM: 1092,\r\n    SODIUM: 1093,\r\n    CHOLESTEROL: 1253,\r\n};\r\n\r\nexport default function FoodSearch(props) {\r\n    const [foodKeyword, setFoodKeyword] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmitSearch = async event => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await getUSDASearchResults(foodKeyword);\r\n        setLoading(false);\r\n    };\r\n\r\n    const getUSDASearchResults = async (keyword) => {\r\n        const response = await fetch('https://shielded-earth-02834.herokuapp.com/food/search', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                food: keyword,\r\n                pageSize: \"9\",\r\n            }),\r\n        });\r\n\r\n        const searchResultFdcIds = [];\r\n\r\n        const responseJSON = await response.json();\r\n        responseJSON.forEach((result) => {\r\n            searchResultFdcIds.push(result.fdcId);\r\n        });\r\n\r\n        const totalPages = responseJSON.TotalPages;\r\n        console.log(\"totalPages\");\r\n        console.log(totalPages);\r\n\r\n        const foodsDetailRes = await fetch('https://shielded-earth-02834.herokuapp.com/foods/detail', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                foods: searchResultFdcIds,\r\n            }),\r\n        });\r\n\r\n        const foodsDetailResJSON = await foodsDetailRes.json();\r\n\r\n        const usdaSearchResults = [];\r\n        responseJSON.forEach((result) => {\r\n            const newUSDASearchResult = {\r\n                result: result,\r\n                details: foodsDetailResJSON.filter((detail) => detail.fdcId === result.fdcId)[0],\r\n            };\r\n            usdaSearchResults.push(newUSDASearchResult);\r\n        });\r\n\r\n        setSearchResults(usdaSearchResults);\r\n    };\r\n\r\n    const handleFoodKeywordChange = event => {\r\n        setFoodKeyword(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n            <span style={{ flexDirection: 'column' }}>\r\n                <Form inline onSubmit={handleSubmitSearch} style={{ margin: '10px' }}>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        placeholder=\"Search for food\"\r\n                        className=\"mr-sm-2\"\r\n                        value={foodKeyword}\r\n                        onChange={handleFoodKeywordChange}\r\n                    />\r\n                    <Button type=\"submit\">Search</Button>\r\n                </Form>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                    {loading && <Spinner animation=\"border\" />}\r\n                    {searchResults && searchResults.map((searchResult) => (\r\n                        <Card key={searchResult.result.fdcId} border=\"primary\" style={{ width: '30%', margin: '10px' }}>\r\n                            <Card.Header>\r\n                                {searchResult.result.description}\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                FdcId: {searchResult.result.fdcId}<br />\r\n                                {searchResult.result.brandOwner && <span>Brand: {searchResult.result.brandOwner}</span>}<br />\r\n                                {searchResult.result.ingredients && <span>Ingredients: {searchResult.result.ingredients}</span>}<br />\r\n\r\n                                {searchResult.details &&\r\n                                        <Table style={{ marginTop: '5px' }}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Nutrient</th>\r\n                                                    <th>Amount (per 100 grams)</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {searchResult.details.foodNutrients.filter((foodNutrient) => [NutrientIds.ENERGY, NutrientIds.PROTEIN, NutrientIds.CARBOHYDRATE, NutrientIds.FAT].includes(foodNutrient.nutrient.id)\r\n                                                ).map((foodNutrient) => (\r\n                                                    <tr key={foodNutrient.id}>\r\n                                                        <td>{foodNutrient.nutrient.name}</td>\r\n                                                        <td>{foodNutrient.amount} {foodNutrient.nutrient.unitName}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    }\r\n                                    {props.showSelect && !props.fdcIds?.includes(searchResult.result.fdcId) &&\r\n                                        <Button onClick={() => props.selectFood(searchResult.result, searchResult.details)}>Select food</Button>\r\n                                    }\r\n                                    {props.showSelect && props.fdcIds?.includes(searchResult.result.fdcId) &&\r\n                                        <span style={{ 'color': 'green' }}>Food selected</span>\r\n                                    }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport function checkNutritionExists(nutrition) {\r\n    return nutrition && !(Object.keys(nutrition).length === 0 && nutrition.constructor === Object);\r\n};\r\n\r\nexport default function NutritionTable(props) {\r\n    return (\r\n        <span style={{ display: 'block', overflowY: 'scroll', overflowX: 'hidden', maxHeight: props.height ? props.height : '300px', border: '1px solid lightGrey', maxWidth: '450px', margin: '0 auto' }}>\r\n\r\n        <Table>\r\n            <thead style={{ display: 'block', marginLeft: '27%', position: 'sticky', top: '0', backgroundColor: 'white' }}>\r\n                <tr>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Nutrient</th>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{ marginLeft: '25%', float: 'left' }}>\r\n                {!!props.nutrition.calories && <tr>\r\n                    <td>Calories</td>\r\n                    <td>{props.nutrition.calories}</td>\r\n                </tr>}\r\n                {!!props.nutrition.protein && <tr>\r\n                    <td>Protein</td>\r\n                    <td>{props.nutrition.protein}</td>\r\n                </tr>}\r\n                {!!props.nutrition.carbs && <tr>\r\n                    <td>Carbs</td>\r\n                    <td>{props.nutrition.carbs}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fat && <tr>\r\n                    <td>Fat</td>\r\n                    <td>{props.nutrition.fat}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sugar && <tr>\r\n                    <td>Sugar</td>\r\n                    <td>{props.nutrition.sugar}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fiber && <tr>\r\n                    <td>Fiber</td>\r\n                    <td>{props.nutrition.fiber}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sodium && <tr>\r\n                    <td>Sodium</td>\r\n                    <td>{props.nutrition.sodium}</td>\r\n                </tr>}\r\n                {!!props.nutrition.calcium && <tr>\r\n                    <td>Calcium</td>\r\n                    <td>{props.nutrition.calcium}</td>\r\n                </tr>}\r\n                {!!props.nutrition.iron && <tr>\r\n                    <td>Iron</td>\r\n                    <td>{props.nutrition.iron}</td>\r\n                </tr>}\r\n                {!!props.nutrition.cholesterol && <tr>\r\n                    <td>Cholesterol</td>\r\n                    <td>{props.nutrition.cholesterol}</td>\r\n                </tr>}\r\n                {!!props.nutrition.potassium && <tr>\r\n                    <td>Potassium</td>\r\n                    <td>{props.nutrition.potassium}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminA && <tr>\r\n                    <td>Vitamin A</td>\r\n                    <td>{props.nutrition.vitaminA}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminC && <tr>\r\n                    <td>Vitamin C</td>\r\n                    <td>{props.nutrition.vitaminC}</td>\r\n                </tr>}\r\n            </tbody>\r\n        </Table>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable from './NutritionTable';\r\n\r\nexport default function EditableFood(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: '30%', margin: '10px' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>{props.food.fdcId}</Card.Header>\r\n            {/* <Card.Body> */}\r\n                {/* <Card.Text> */}\r\n                    {props.food.fdcId && <span style={{ margin: '5px' }}>FDC ID: {props.food.fdcId}<br /></span>}\r\n                    {props.food.name && <span style={{ margin: '5px' }}>Name: {props.food.name}<br /></span>}\r\n                    {props.food.details && <span style={{ margin: '5px' }}>Description: {props.food.details.description}<br /></span>}\r\n                    <span style={{ margin: '5px' }}>Calories: {props.food.nutrition.calories}<br /></span>\r\n\r\n                    {!displayNutritionInfo && \r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                            <br />\r\n                        </span>\r\n                    }\r\n                    {displayNutritionInfo && <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>}\r\n\r\n                    <span>\r\n                        Serving size:\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            placeholder={100}\r\n                            style={{ width: '80px', display: 'inline-block', margin: '5px' }}\r\n                            value={props.food.serving}\r\n                            onChange={(e) => props.updateServingSize(props.food, e.target.value)}\r\n                        />\r\n                        g\r\n                    </span><br />\r\n                {/* </Card.Text> */}\r\n                <Button variant=\"danger\" onClick={() => props.removeFood(props.food._id ? props.food._id : props.food.fdcId)}>Remove</Button>\r\n            {/* </Card.Body> */}\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport FoodSearch, { NutrientIds } from './FoodSearch';\r\nimport EditableFood from './EditableFood';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nconst mealOptions = [\r\n    { value: 'breakfast', label: 'Breakfast' },\r\n    { value: 'lunch', label: 'Lunch' },\r\n    { value: 'dinner', label: 'Dinner' }\r\n]\r\n\r\nexport default function EditMealForm(props) {\r\n    const [foods, setFoods] = useState(props.meal?.foods ? props.meal.foods : []);\r\n    const [mealName, setMealName] = useState(props.meal?.name ? props.meal.name : '');\r\n    const [mealNutrition, setMealNutrition] = useState(props.meal?.nutrition ? props.meal.nutrition : {});\r\n    const [fdcIds, setFdcIds] = useState([]);\r\n\r\n    const updateMealNutrition = () => {\r\n        const nutrition = {\r\n            calories: 0,\r\n            protein: 0,\r\n            carbs: 0,\r\n            fat: 0,\r\n            sugar: 0,\r\n            fiber: 0,\r\n            sodium: 0,\r\n            calcium: 0,\r\n            iron: 0,\r\n            cholesterol: 0,\r\n            potassium: 0,\r\n            vitaminA: 0,\r\n            vitaminC: 0,\r\n        };\r\n        foods.forEach((food) => {\r\n            nutrition.calories += food.nutrition.calories;\r\n            nutrition.protein += food.nutrition.protein;\r\n            nutrition.carbs += food.nutrition.carbs;\r\n            nutrition.fat += food.nutrition.fat;\r\n            nutrition.sugar += food.nutrition.sugar;\r\n            nutrition.fiber += food.nutrition.fiber;\r\n            nutrition.sodium += food.nutrition.sodium;\r\n            nutrition.calcium += food.nutrition.calcium;\r\n            nutrition.iron += food.nutrition.iron;\r\n            nutrition.cholesterol += food.nutrition.cholesterol;\r\n            nutrition.potassium += food.nutrition.potassium;\r\n            nutrition.vitaminA += food.nutrition.vitaminA;\r\n            nutrition.vitaminC += food.nutrition.vitaminC;\r\n        });\r\n\r\n        setMealNutrition(nutrition);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const formattedFoods = foods.map((food) => {\r\n            food.name = food.name ? food.name : food.details.description;\r\n            return food;\r\n        });\r\n        const meal = {\r\n            _id: props.meal?._id,\r\n            name: mealName,\r\n            foods: formattedFoods,\r\n            nutrition: mealNutrition,\r\n        };\r\n        props.submit(meal);\r\n    };\r\n\r\n    // need to store base cal / 100 in food somewhere\r\n    const updateServingSize = (food, newServingSize) => {\r\n        const newFoods = foods.map((oldFood) => {\r\n            const isMatch = food._id ? oldFood._id === food._id : oldFood.fdcId === food.fdcId;\r\n            if (isMatch) {\r\n                food.serving = parseInt(newServingSize);\r\n                food.nutrition = {\r\n                    calories: getRoundedWholeNutrient(oldFood.usdaNutrition.calories, newServingSize),\r\n                    protein: getRounded2DecNutrient(oldFood.usdaNutrition.protein, newServingSize),\r\n                    carbs: getRounded2DecNutrient(oldFood.usdaNutrition.carbs, newServingSize),\r\n                    fat: getRounded2DecNutrient(oldFood.usdaNutrition.fat, newServingSize),\r\n                    sugar: getRounded2DecNutrient(oldFood.usdaNutrition.sugar, newServingSize),\r\n                    fiber: getRounded2DecNutrient(oldFood.usdaNutrition.fiber, newServingSize),\r\n                    sodium: getRoundedWholeNutrient(oldFood.usdaNutrition.sodium, newServingSize),\r\n                    calcium: getRoundedWholeNutrient(oldFood.usdaNutrition.calcium, newServingSize),\r\n                    iron: getRounded2DecNutrient(oldFood.usdaNutrition.iron, newServingSize),\r\n                    cholesterol: getRoundedWholeNutrient(oldFood.usdaNutrition.cholesterol, newServingSize),\r\n                    potassium: getRoundedWholeNutrient(oldFood.usdaNutrition.potassium, newServingSize),\r\n                    vitaminA: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminA, newServingSize),\r\n                    vitaminC: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminC, newServingSize),\r\n                };\r\n                return food;\r\n            }\r\n            return oldFood;\r\n        });\r\n        setFoods(newFoods);\r\n        updateMealNutrition();\r\n    };\r\n\r\n    const getRounded2DecNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient * servingSize) / 100;\r\n    };\r\n\r\n    const getRoundedWholeNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient / 100 * servingSize);\r\n    };\r\n\r\n    const addFood = (food, foodDetails) => {\r\n        const calories = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.ENERGY)[0]?.amount;\r\n        const protein = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.PROTEIN)[0]?.amount;\r\n        const carbs = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CARBOHYDRATE)[0]?.amount;\r\n        const fat = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FAT)[0]?.amount;\r\n        const sugar = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SUGAR)[0]?.amount;\r\n        const fiber = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FIBER)[0]?.amount;\r\n        const sodium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SODIUM)[0]?.amount;\r\n        const calcium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CALCIUM)[0]?.amount;\r\n        const iron = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.IRON)[0]?.amount;\r\n        const cholesterol = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CHOLESTEROL)[0]?.amount;\r\n        const potassium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.POTASSIUM)[0]?.amount;\r\n        const vitaminA = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_A)[0]?.amount;\r\n        const vitaminC = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_C)[0]?.amount;\r\n\r\n\r\n        const newFood = {\r\n            brand: food.brandOwner,\r\n            ingredients: food.ingredients,\r\n            fdcId: food.fdcId,\r\n            serving: 100,\r\n            nutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            usdaNutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            details: foodDetails,\r\n        };\r\n        setFoods(foods => [...foods, newFood]);\r\n        setFdcIds(fdcIds => [...fdcIds, food.fdcId]);\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(newFood, 1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromAddForm = (garbageFdcId) => {\r\n        const removedFood = foods.filter(food => food.fdcId === garbageFdcId)[0];\r\n\r\n        setFoods(foods.filter(food => food.fdcId !== garbageFdcId));\r\n        setFdcIds(fdcIds.filter(fdcId => fdcId !== garbageFdcId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromEditForm = (garbageId) => {\r\n        const removedFood = foods.filter(food => food._id === garbageId)[0];\r\n        setFoods(foods.filter(food => food._id !== garbageId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const calculateNewMealNutrition = (updatedFood, sign) => {\r\n        return {\r\n            calories: calculateNewNutrient(mealNutrition.calories, updatedFood.nutrition.calories, sign),\r\n            protein: calculateNewNutrient(mealNutrition.protein, updatedFood.nutrition.protein, sign),\r\n            carbs: calculateNewNutrient(mealNutrition.carbs, updatedFood.nutrition.carbs, sign),\r\n            fat: calculateNewNutrient(mealNutrition.fat, updatedFood.nutrition.fat, sign),\r\n            sugar: calculateNewNutrient(mealNutrition.sugar, updatedFood.nutrition.sugar, sign),\r\n            fiber: calculateNewNutrient(mealNutrition.fiber, updatedFood.nutrition.fiber, sign),\r\n            sodium: calculateNewNutrient(mealNutrition.sodium, updatedFood.nutrition.sodium, sign),\r\n            calcium: calculateNewNutrient(mealNutrition.calcium, updatedFood.nutrition.calcium, sign),\r\n            iron: calculateNewNutrient(mealNutrition.iron, updatedFood.nutrition.iron, sign),\r\n            cholesterol: calculateNewNutrient(mealNutrition.cholesterol, updatedFood.nutrition.cholesterol, sign),\r\n            potassium: calculateNewNutrient(mealNutrition.potassium, updatedFood.nutrition.potassium, sign),\r\n            vitaminA: calculateNewNutrient(mealNutrition.vitaminA, updatedFood.nutrition.vitaminA, sign),\r\n            vitaminC: calculateNewNutrient(mealNutrition.vitaminC, updatedFood.nutrition.vitaminC, sign),\r\n        };\r\n    };\r\n\r\n    const calculateNewNutrient = (mealNutrient, foodNutrient, sign) => {\r\n        return (mealNutrient ? mealNutrient : 0) + sign * (foodNutrient ? foodNutrient : 0);\r\n    };\r\n\r\n    return (\r\n        <div style={{ 'margin': '50px' }}>\r\n            <div>\r\n                <div style={{ borderStyle: 'solid', borderWidth: '1px', padding: '20px' }}>\r\n                    <div>Meal:</div>\r\n                    Meal nutrition summary\r\n                    {checkNutritionExists(mealNutrition) && <NutritionTable nutrition={mealNutrition} />}\r\n\r\n                    <Dropdown onSelect={setMealName} value={mealName}>\r\n                        <Dropdown.Toggle style={{ backgroundColor: 'white', color: 'black' }}>\r\n                            {mealName ? mealName : \"Meal\"}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {mealOptions.map((option) => (\r\n                                <Dropdown.Item key={option.value} eventKey={option.value}>{option.label}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <div>Foods:</div>\r\n                    <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        {foods.map((food) => (\r\n                            <EditableFood\r\n                                key={food._id ? food._id : food.fdcId}\r\n                                food={food}\r\n                                updateServingSize={updateServingSize}\r\n                                removeFood={props.meal ? removeFoodFromEditForm : removeFoodFromAddForm}\r\n                            />\r\n                        ))}\r\n                    </span>\r\n\r\n                    <FoodSearch\r\n                        selectFood={addFood}\r\n                        showSelect\r\n                        fdcIds={fdcIds}\r\n                    />\r\n\r\n                    <div style={{ paddingTop: '20px' }}>\r\n                        <Button variant=\"secondary\" type=\"button\" onClick={props.cancel} style={{ marginRight: '5px' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                            {!props.meal && 'Add Meal'}\r\n                            {props.meal && 'Update Meal'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nexport default function Food(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <span>\r\n            {props.food.name}<br />\r\n            {<span>\r\n                {props.food.group && <span>group: {props.food.group}<br /></span>}\r\n                serving: {props.food.serving}<br />\r\n                calories: {props.food?.nutrition?.calories}<br />\r\n\r\n                {!displayNutritionInfo &&\r\n                    <span>\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n                {displayNutritionInfo && checkNutritionExists(props.food.nutrition) &&\r\n                    <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} height='180px' />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n            </span>}\r\n        </span>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport Food from './Food';\r\n\r\nexport default function Meal(props) {\r\n    return (\r\n        <Card\r\n            style={{ width: '24rem', margin: '0 auto' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>\r\n                <span>{props.meal.name}</span><br />\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.updateMeal(props.meal)}>\r\n                    <FontAwesomeIcon icon={faEdit} style={{ color: 'black' }} />\r\n                </Button>\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.deleteMeal(props.meal._id)}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} style={{ color: 'black' }} />\r\n                </Button>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.meal?.foods?.map((food, k) => (\r\n                        <span key={k}>\r\n                            <Food food={food} />\r\n                        </span>\r\n                    ))}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <div>\r\n                Meal nutrition\r\n                {checkNutritionExists(props.meal?.nutrition) && <NutritionTable nutrition={props.meal.nutrition} />}\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport MyNavbar from './MyNavbar';\r\nimport EditMealForm from './EditMealForm';\r\nimport Meal from './Meal';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\n\r\nexport default function Days(props) {\r\n    const [day, setDay] = useState();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [showAddMealForm, setShowAddMealForm] = useState(false);\r\n    const [editMeal, setEditMeal] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(\"Days useEffect\");\r\n        console.log(getUserFromLocalStorage());\r\n        fetchDay(selectedDate);\r\n        // disabled lint on next line because otherwise lint would complain about fetchDays being a missing dependency\r\n        // when in reality, fetchDays is a method defined separately underneath, since it is used in other places\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const fetchDay = async (date) => {\r\n        const fetchedDay = await getDay(date);\r\n        setDay(fetchedDay);\r\n    };\r\n\r\n    const getDay = async (date) => {\r\n        const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getUTCDate();\r\n        const response = await fetch('https://shielded-earth-02834.herokuapp.com/days/' + dateStr + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const responseJSON = await response.json();\r\n        if (responseJSON._id === \"000000000000000000000000\") {\r\n            return null;\r\n        }\r\n        return responseJSON;\r\n    };\r\n\r\n    const handleSelectedDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        fetchDay(date);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const onAddMealButtonClick = () => {\r\n        setShowAddMealForm(true);\r\n    };\r\n\r\n    const submitAddMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch('https://shielded-earth-02834.herokuapp.com/days/' + dateStr + '/meals?user=' + getUserFromLocalStorage(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const cancelAddMealForm = () => {\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const submitEditMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch('https://shielded-earth-02834.herokuapp.com/days/' + dateStr + '/meals/' + meal._id + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setEditMeal('');\r\n    };\r\n\r\n    const deleteMeal = async (mealId) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch('https://shielded-earth-02834.herokuapp.com/days/' + dateStr + '/meals/' + mealId + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n    };\r\n\r\n    const updateMeal = (meal) => {\r\n        if (editMeal) {\r\n            setEditMeal('');\r\n        } else {\r\n            setEditMeal(meal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            <div style={{ margin: '10px' }}>\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={handleSelectedDateChange}\r\n                />\r\n            </div>\r\n            {showAddMealForm && <EditMealForm\r\n                submit={submitAddMealForm}\r\n                cancel={cancelAddMealForm}\r\n            />}\r\n            {editMeal && <EditMealForm\r\n                submit={submitEditMealForm}\r\n                cancel={() => setEditMeal('')}\r\n                meal={editMeal}\r\n            />}\r\n            {!showAddMealForm &&\r\n                <Button onClick={onAddMealButtonClick} style={{ margin: '10px' }}>\r\n                    Add meal\r\n                </Button>\r\n            }\r\n            {day && <div>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {day.meals && day.meals.map((meal, j) => (\r\n                    <Meal\r\n                        key={j}\r\n                        meal={meal}\r\n                        updateMeal={updateMeal}\r\n                        deleteMeal={deleteMeal}\r\n                    />\r\n                ))}\r\n                </div>\r\n                <div>\r\n                    {checkNutritionExists(day.nutrition) &&\r\n                        <span>\r\n                            Nutrition summary of the day\r\n                            <NutritionTable nutrition={day.nutrition} />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>}\r\n            {!day && <div>no data for this date</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport MyNavbar from './MyNavbar';\r\nimport FoodSearch from './FoodSearch';\r\n\r\nexport default function FoodSearchPage(props) {\r\n    const [selectedFood, setSelectedFood] = useState('');\r\n\r\n    const onFoodSelected = (food) => {\r\n        setSelectedFood(food.FdcId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            {selectedFood && <span>selected food fdc ID: {selectedFood}</span>}\r\n            <FoodSearch selectFood={onFoodSelected} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport SignIn from './SignIn';\r\nimport Days from './Days';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FoodSearchPage from './FoodSearchPage';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getUserFromLocalStorage());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} >\r\n        <div>\r\n          <Route exact path=\"/\" render={() => <SignIn setAuthenticated={setIsAuthenticated} />} />\r\n          <Route path=\"/signin\" render={() => <SignIn setAuthenticated={setIsAuthenticated} />} />\r\n          {!isAuthenticated &&\r\n            <span>\r\n              <Redirect to=\"/signin\" />\r\n            </span>\r\n          }\r\n          {isAuthenticated &&\r\n            <span>\r\n              <Route path=\"/days\" render={() => <Days setAuthenticated={setIsAuthenticated} />} />\r\n              <Route path=\"/foodsearch\" render={() => <FoodSearchPage setAuthenticated={setIsAuthenticated} />} />\r\n            </span>\r\n          }\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}