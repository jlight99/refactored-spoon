{"version":3,"sources":["MyNavbar.jsx","FoodSearchResult.jsx","FoodSearch.jsx","NutritionTable.jsx","EditableFood.jsx","EditMealForm.jsx","Food.jsx","Meal.jsx","SignInForm.jsx","SignIn.jsx","Days.jsx","FoodSearchPage.jsx","HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","history","useHistory","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","process","Button","variant","onClick","localStorage","removeItem","setAuthenticated","push","NutrientIds","ENERGY","CALCIUM","IRON","VITAMIN_A","VITAMIN_C","PROTEIN","FAT","CARBOHYDRATE","SUGAR","FIBER","POTASSIUM","SODIUM","CHOLESTEROL","FoodSearchResult","Card","key","searchResult","fdcId","border","style","width","margin","Header","description","Body","brandOwner","ingredients","foodNutrients","Table","marginTop","filter","foodNutrient","includes","nutrientId","map","nutrientName","value","unitName","showSelect","fdcIds","selectFood","FoodSearch","useState","foodKeyword","setFoodKeyword","searchResults","setSearchResults","loading","setLoading","totalPages","setTotalPages","pageNumber","setPageNumber","pageChangeError","setPageChangeError","handleSubmitSearch","event","a","preventDefault","searchFood","handleSubmitPageChange","keyword","pageSize","searchUSDAFood","searchResponse","searchedFoods","foods","length","currentPage","fetch","serverURL","method","headers","body","JSON","stringify","generalSearchInput","requireAllWords","response","json","display","flexDirection","justifyContent","flexWrap","Form","inline","onSubmit","FormControl","type","placeholder","onChange","target","Spinner","animation","parseInt","color","checkNutritionExists","nutrition","Object","keys","constructor","NutritionTable","round","nutrient","Math","overflowY","overflowX","maxHeight","height","maxWidth","marginLeft","position","top","backgroundColor","float","calories","protein","carbs","fat","sugar","fiber","sodium","calcium","iron","cholesterol","potassium","vitaminA","vitaminC","EditableFood","displayNutritionInfo","setDisplayNutritionInfo","food","name","serving","e","updateServingSize","removeFood","_id","mealOptions","label","EditMealForm","meal","setFoods","mealName","setMealName","mealNutrition","setMealNutrition","setFdcIds","newServingSize","newFoods","oldFood","forEach","usdaNutrition","getRoundedNutrient","updateMealNutrition","nutrientValue","servingSize","getNutrient","usdaNutrient","removeFoodFromAddForm","garbageFdcId","removedFood","newMealNutrition","calculateNewMealNutrition","removeFoodFromEditForm","garbageId","updatedFood","sign","calculateNewNutrient","mealNutrient","borderStyle","borderWidth","padding","Dropdown","onSelect","Menu","option","Item","eventKey","newFood","brand","paddingTop","cancel","marginRight","formattedFoods","submit","Food","marginBottom","Meal","size","updateMeal","icon","faEdit","deleteMeal","faTrashAlt","k","SignInForm","email","setEmail","password","setPassword","handleSubmit","Group","controlId","Label","Control","getUserFromLocalStorage","getItem","SignIn","setKey","error","setError","text","responseText","status","setItem","Tabs","activeKey","Tab","title","Days","day","setDay","Date","selectedDate","setSelectedDate","showAddMealForm","setShowAddMealForm","editMeal","setEditMeal","useEffect","fetchDay","date","getDay","fetchedDay","dateStr","getFullYear","getMonth","getUTCDate","responseJSON","submitAddMealForm","submitEditMealForm","mealId","selected","meals","j","FoodSearchPage","selectedFood","setSelectedFood","FdcId","HomePage","App","isAuthenticated","setIsAuthenticated","basename","exact","path","render","to","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b34c3e71.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MyNavbar(props) {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('currentUser');\r\n        props.setAuthenticated(false);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand>Refactored Spoon</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/days\"}>Days</Nav.Link>\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/foodsearch\"}>Food Search</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            <Button variant=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n        </Navbar>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const NutrientIds = {\r\n    ENERGY: 1008,\r\n    CALCIUM: 1087,\r\n    IRON: 1089,\r\n    VITAMIN_A: 1104,\r\n    VITAMIN_C: 1162,\r\n    PROTEIN: 1003,\r\n    FAT: 1004,\r\n    CARBOHYDRATE: 1005,\r\n    SUGAR: 2000,\r\n    FIBER: 1079,\r\n    POTASSIUM: 1092,\r\n    SODIUM: 1093,\r\n    CHOLESTEROL: 1253,\r\n};\r\n\r\nexport default function FoodSearchResult(props) {\r\n    return (\r\n        <Card key={props.searchResult.fdcId} border=\"primary\" style={{ width: '30%', margin: '10px' }}>\r\n            <Card.Header>\r\n                {props.searchResult.description}\r\n            </Card.Header>\r\n            <Card.Body>\r\n                FdcId: {props.searchResult.fdcId}<br />\r\n                {props.searchResult.brandOwner && <span>Brand: {props.searchResult.brandOwner}<br /></span>}\r\n                {props.searchResult.ingredients &&\r\n                    <span>\r\n                        Ingredients: {props.searchResult.ingredients}<br />\r\n                    </span>\r\n                }\r\n                {props.searchResult.foodNutrients &&\r\n                    <Table style={{ marginTop: '5px' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nutrient</th>\r\n                                <th>Amount (per 100 grams)</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {props.searchResult.foodNutrients.filter((foodNutrient) => [NutrientIds.ENERGY, NutrientIds.PROTEIN, NutrientIds.CARBOHYDRATE, NutrientIds.FAT].includes(foodNutrient.nutrientId)\r\n                            ).map((foodNutrient) => (\r\n                                <tr key={foodNutrient.nutrientId}>\r\n                                    <td>{foodNutrient.nutrientName}</td>\r\n                                    <td>{foodNutrient.value} {foodNutrient.unitName}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                }\r\n                {props.showSelect && !props.fdcIds?.includes(props.searchResult.fdcId) &&\r\n                    <Button onClick={() => props.selectFood()}>Select food</Button>\r\n                }\r\n                {props.showSelect && props.fdcIds?.includes(props.searchResult.fdcId) &&\r\n                    <span style={{ 'color': 'green' }}>Food selected</span>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { serverURL } from './App';\r\nimport FoodSearchResult from './FoodSearchResult';\r\n\r\nexport default function FoodSearch(props) {\r\n    const [foodKeyword, setFoodKeyword] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [pageChangeError, setPageChangeError] = useState(\"\");\r\n\r\n    const handleSubmitSearch = async event => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await searchFood(foodKeyword);\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSubmitPageChange = async event => {\r\n        event.preventDefault();\r\n        if (pageNumber > totalPages) {\r\n            setPageChangeError(\"error! page \" + pageNumber + \" does not exist.\");\r\n            return;\r\n        }\r\n        setPageChangeError(\"\");\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await searchFood(foodKeyword, 9, pageNumber);\r\n        setLoading(false);\r\n    };\r\n\r\n    const searchFood = async (keyword, pageSize = 9, pageNumber = 1) => {\r\n        const searchResponse = await searchUSDAFood(keyword, pageSize, pageNumber);\r\n        const searchedFoods = searchResponse?.foods ? searchResponse.foods : [];\r\n\r\n        if (searchedFoods.length === 0) {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n\r\n        setTotalPages(searchResponse.totalPages);\r\n        setPageNumber(searchResponse.currentPage);\r\n\r\n        setSearchResults(searchedFoods);\r\n    };\r\n\r\n    const searchUSDAFood = async (keyword, pageSize, pageNumber) => {\r\n        const response = await fetch(serverURL + '/food/search', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                generalSearchInput: keyword,\r\n                pageSize: pageSize,\r\n                pageNumber: pageNumber >= 0 ? pageNumber : 1,\r\n                requireAllWords: true,\r\n            }),\r\n        });\r\n\r\n        return await response.json();\r\n    };\r\n\r\n    const handleFoodKeywordChange = event => {\r\n        setFoodKeyword(event.target.value);\r\n    };\r\n\r\n    const handlePageNumberChange = event => {\r\n        setPageNumber(parseInt(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n            <span>\r\n                <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', margin: '10px' }}>\r\n                    <Form inline onSubmit={handleSubmitSearch}>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search for food\"\r\n                            className=\"mr-sm-2\"\r\n                            value={foodKeyword}\r\n                            onChange={handleFoodKeywordChange}\r\n                        />\r\n                        <Button type=\"submit\" style={{ margin: '5px' }}>Search</Button>\r\n                        <Button variant=\"secondary\" onClick={() => setSearchResults([])} style={{ margin: '5px' }}>Clear search</Button>\r\n                    </Form>\r\n                </span>\r\n                <div>\r\n                    {loading && <Spinner animation=\"border\" />}\r\n                    {searchResults && searchResults.length > 0 &&\r\n                        <span style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                            <span style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                {searchResults.map((searchResult) => (\r\n                                    <FoodSearchResult\r\n                                        key={searchResult.fdcId}\r\n                                        showSelect={props.showSelect}\r\n                                        selectFood={() => props.selectFood(searchResult)}\r\n                                        fdcIds={props.fdcIds}\r\n                                        searchResult={searchResult}\r\n                                    />\r\n                                ))}\r\n                            </span>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                <Form inline onSubmit={handleSubmitPageChange}>\r\n                                    Page\r\n                                    <FormControl\r\n                                        type=\"number\"\r\n                                        style={{ margin: '5px', width: '80px' }}\r\n                                        value={pageNumber}\r\n                                        onChange={handlePageNumberChange}\r\n                                    />\r\n                                    of {totalPages}\r\n                                    <Button type=\"submit\" style={{ margin: '5px' }}>Go</Button>\r\n                                </Form>\r\n                                <div style={{ color: 'red' }}>{pageChangeError}</div>\r\n                            </div>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport function checkNutritionExists(nutrition) {\r\n    return nutrition && !(Object.keys(nutrition).length === 0 && nutrition.constructor === Object);\r\n};\r\n\r\nexport default function NutritionTable(props) {\r\n    const round = (nutrient) => {\r\n        return Math.round(nutrient * 100) / 100;\r\n    };\r\n\r\n    return (\r\n        <span style={{ display: 'block', overflowY: 'scroll', overflowX: 'hidden', maxHeight: props.height ? props.height : '300px', border: '1px solid lightGrey', maxWidth: '450px', margin: '0 auto' }}>\r\n\r\n        <Table>\r\n            <thead style={{ display: 'block', marginLeft: '27%', position: 'sticky', top: '0', backgroundColor: 'white' }}>\r\n                <tr>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Nutrient</th>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{ marginLeft: '25%', float: 'left' }}>\r\n                {!!props.nutrition.calories?.value && <tr>\r\n                    <td>Calories</td>\r\n                    <td>{round(props.nutrition.calories.value)} {props.nutrition.calories.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.protein?.value && <tr>\r\n                    <td>Protein</td>\r\n                    <td>{round(props.nutrition.protein.value)} {props.nutrition.protein.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.carbs?.value && <tr>\r\n                    <td>Carbs</td>\r\n                    <td>{round(props.nutrition.carbs.value)} {props.nutrition.carbs.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fat?.value && <tr>\r\n                    <td>Fat</td>\r\n                    <td>{round(props.nutrition.fat.value)} {props.nutrition.fat.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sugar?.value && <tr>\r\n                    <td>Sugar</td>\r\n                    <td>{round(props.nutrition.sugar.value)} {props.nutrition.sugar.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fiber?.value && <tr>\r\n                    <td>Fiber</td>\r\n                    <td>{round(props.nutrition.fiber.value)} {props.nutrition.fiber.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sodium?.value && <tr>\r\n                    <td>Sodium</td>\r\n                    <td>{round(props.nutrition.sodium.value)} {props.nutrition.sodium.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.calcium?.value && <tr>\r\n                    <td>Calcium</td>\r\n                    <td>{round(props.nutrition.calcium.value)} {props.nutrition.calcium.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.iron?.value && <tr>\r\n                    <td>Iron</td>\r\n                    <td>{round(props.nutrition.iron.value)} {props.nutrition.iron.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.cholesterol?.value && <tr>\r\n                    <td>Cholesterol</td>\r\n                    <td>{round(props.nutrition.cholesterol.value)} {props.nutrition.cholesterol.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.potassium?.value && <tr>\r\n                    <td>Potassium</td>\r\n                    <td>{round(props.nutrition.potassium.value)} {props.nutrition.potassium.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminA?.value && <tr>\r\n                    <td>Vitamin A</td>\r\n                    <td>{round(props.nutrition.vitaminA.value)} {props.nutrition.vitaminA.unitName}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminC?.value && <tr>\r\n                    <td>Vitamin C</td>\r\n                    <td>{round(props.nutrition.vitaminC.value)} {props.nutrition.vitaminC.unitName}</td>\r\n                </tr>}\r\n            </tbody>\r\n        </Table>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable from './NutritionTable';\r\n\r\nexport default function EditableFood(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: '30%', margin: '10px' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>{props.food.fdcId}</Card.Header>\r\n                    {props.food.fdcId && <span style={{ margin: '5px' }}>FDC ID: {props.food.fdcId}<br /></span>}\r\n                    {props.food.name && <span style={{ margin: '5px' }}>Name: {props.food.name}<br /></span>}\r\n                    {props.food.description && <span style={{ margin: '5px' }}>Description: {props.food.description}<br /></span>}\r\n                    <span style={{ margin: '5px' }}>Calories: {props.food.nutrition.calories.value} kcal<br /></span>\r\n\r\n                    {!displayNutritionInfo && \r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                            <br />\r\n                        </span>\r\n                    }\r\n                    {displayNutritionInfo && <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>}\r\n\r\n                    <span>\r\n                        Serving size:\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            placeholder={100}\r\n                            style={{ width: '80px', display: 'inline-block', margin: '5px' }}\r\n                            value={props.food.serving}\r\n                            onChange={(e) => props.updateServingSize(e.target.value)}\r\n                        />\r\n                        g\r\n                    </span><br />\r\n                <Button variant=\"danger\" onClick={() => props.removeFood(props.food._id ? props.food._id : props.food.fdcId)}>Remove</Button>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport FoodSearch from './FoodSearch';\r\nimport { NutrientIds } from './FoodSearchResult';\r\nimport EditableFood from './EditableFood';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nconst mealOptions = [\r\n    { value: 'breakfast', label: 'Breakfast' },\r\n    { value: 'lunch', label: 'Lunch' },\r\n    { value: 'dinner', label: 'Dinner' }\r\n]\r\n\r\nexport default function EditMealForm(props) {\r\n    const [foods, setFoods] = useState(props.meal?.foods ? props.meal.foods : []);\r\n    const [mealName, setMealName] = useState(props.meal?.name ? props.meal.name : '');\r\n    const [mealNutrition, setMealNutrition] = useState(props.meal?.nutrition ? props.meal.nutrition : {});\r\n    const [fdcIds, setFdcIds] = useState([]);\r\n\r\n    const updateMealNutrition = () => {\r\n        const nutrition = mealNutrition;\r\n        Object.keys(nutrition).forEach(nutrient => {\r\n            if (nutrition[nutrient]) {\r\n                nutrition[nutrient].value = 0;\r\n            }\r\n        });\r\n\r\n        foods.forEach((food) => {\r\n            Object.keys(nutrition).forEach(nutrient => {\r\n                if (nutrition[nutrient] && food.nutrition[nutrient]) {\r\n                    nutrition[nutrient].value += food.nutrition[nutrient].value;\r\n                }\r\n            });\r\n        });\r\n\r\n        setMealNutrition(nutrition);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const formattedFoods = foods.map((food) => {\r\n            food.name = food.name ? food.name : food.description;\r\n            return food;\r\n        });\r\n        const meal = {\r\n            _id: props.meal?._id,\r\n            name: mealName,\r\n            foods: formattedFoods,\r\n            nutrition: mealNutrition,\r\n        };\r\n        props.submit(meal);\r\n    };\r\n\r\n    const updateServingSize = (food, newServingSize) => {\r\n        const newFoods = foods.map((oldFood) => {\r\n            const isMatch = food._id ? oldFood._id === food._id : oldFood.fdcId === food.fdcId;\r\n            if (isMatch) {\r\n                food.serving = newServingSize ? parseInt(newServingSize) : 0;\r\n                Object.keys(food.nutrition).forEach(nutrient => {\r\n                    if (oldFood.usdaNutrition[nutrient]?.value) {\r\n                        food.nutrition[nutrient].value = getRoundedNutrient(oldFood.usdaNutrition[nutrient].value, food.serving);\r\n                    }\r\n                });\r\n                return food;\r\n            }\r\n            return oldFood;\r\n        });\r\n        setFoods(newFoods);\r\n        updateMealNutrition();\r\n    };\r\n\r\n    const getRoundedNutrient = (nutrientValue, servingSize) => {\r\n        return Math.round(nutrientValue * servingSize) / 100;\r\n    };\r\n\r\n    const getNutrient = (usdaNutrient) => {\r\n        return {\r\n            nutrientId: usdaNutrient.nutrientId,\r\n            nutrientName: usdaNutrient.nutrientName,\r\n            unitName: usdaNutrient.unitName,\r\n            value: usdaNutrient.value,\r\n        };\r\n    };\r\n\r\n    const addFood = (food) => {\r\n        const calories = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.ENERGY)[0];\r\n        const protein = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.PROTEIN)[0];\r\n        const carbs = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.CARBOHYDRATE)[0];\r\n        const fat = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.FAT)[0];\r\n        const sugar = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.SUGAR)[0];\r\n        const fiber = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.FIBER)[0];\r\n        const sodium = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.SODIUM)[0];\r\n        const calcium = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.CALCIUM)[0];\r\n        const iron = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.IRON)[0];\r\n        const cholesterol = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.CHOLESTEROL)[0];\r\n        const potassium = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.POTASSIUM)[0];\r\n        const vitaminA = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.VITAMIN_A)[0];\r\n        const vitaminC = food.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrientId === NutrientIds.VITAMIN_C)[0];\r\n\r\n        const newFood = {\r\n            description: food.description,\r\n            brand: food.brandOwner,\r\n            ingredients: food.ingredients,\r\n            fdcId: food.fdcId,\r\n            serving: 100,\r\n            nutrition: {\r\n                calories: calories ? getNutrient(calories) : null,\r\n                protein: protein ? getNutrient(protein) : null,\r\n                carbs: carbs ? getNutrient(carbs) : null,\r\n                fat: fat ? getNutrient(fat) : null,\r\n                sugar: sugar ? getNutrient(sugar) : null,\r\n                fiber: fiber ? getNutrient(fiber) : null,\r\n                sodium: sodium ? getNutrient(sodium) : null,\r\n                calcium: calcium ? getNutrient(calcium) : null,\r\n                iron: iron ? getNutrient(iron) : null,\r\n                cholesterol: cholesterol ? getNutrient(cholesterol) : null,\r\n                potassium: potassium ? getNutrient(potassium) : null,\r\n                vitaminA: vitaminA ? getNutrient(vitaminA) : null,\r\n                vitaminC: vitaminC ? getNutrient(vitaminC) : null,\r\n            },\r\n            usdaNutrition: {\r\n                calories: calories ? getNutrient(calories) : null,\r\n                protein: protein ? getNutrient(protein) : null,\r\n                carbs: carbs ? getNutrient(carbs) : null,\r\n                fat: fat ? getNutrient(fat) : null,\r\n                sugar: sugar ? getNutrient(sugar) : null,\r\n                fiber: fiber ? getNutrient(fiber) : null,\r\n                sodium: sodium ? getNutrient(sodium) : null,\r\n                calcium: calcium ? getNutrient(calcium) : null,\r\n                iron: iron ? getNutrient(iron) : null,\r\n                cholesterol: cholesterol ? getNutrient(cholesterol) : null,\r\n                potassium: potassium ? getNutrient(potassium) : null,\r\n                vitaminA: vitaminA ? getNutrient(vitaminA) : null,\r\n                vitaminC: vitaminC ? getNutrient(vitaminC) : null,\r\n            },\r\n        };\r\n        setFoods(foods => [...foods, newFood]);\r\n        setFdcIds(fdcIds => [...fdcIds, food.fdcId]);\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(newFood, 1.0);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromAddForm = (garbageFdcId) => {\r\n        const removedFood = foods.filter(food => food.fdcId === garbageFdcId)[0];\r\n\r\n        setFoods(foods.filter(food => food.fdcId !== garbageFdcId));\r\n        setFdcIds(fdcIds.filter(fdcId => fdcId !== garbageFdcId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1.0);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromEditForm = (garbageId) => {\r\n        const removedFood = foods.filter(food => food._id === garbageId)[0];\r\n        setFoods(foods.filter(food => food._id !== garbageId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1.0);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const calculateNewMealNutrition = (updatedFood, sign) => {\r\n        var nutrition = mealNutrition;\r\n        if (!checkNutritionExists(mealNutrition)) {\r\n            const newMealNutrition = {};\r\n            Object.keys(updatedFood.nutrition).forEach(nutrient => {\r\n                if (updatedFood.nutrition[nutrient]) {\r\n                    newMealNutrition[nutrient] = {\r\n                        nutrientId: updatedFood.nutrition[nutrient].nutrientId,\r\n                        nutrientName: updatedFood.nutrition[nutrient].nutrientName,\r\n                        unitName: updatedFood.nutrition[nutrient].unitName,\r\n                        value: updatedFood.nutrition[nutrient].value,\r\n                    };\r\n                }\r\n            });\r\n            return newMealNutrition;\r\n        }\r\n        Object.keys(nutrition).forEach(nutrient => {\r\n            if (nutrition[nutrient] && updatedFood.nutrition[nutrient]) {\r\n                nutrition[nutrient].value = calculateNewNutrient(nutrition[nutrient].value, updatedFood.nutrition[nutrient].value, sign);\r\n            }\r\n        });\r\n        return nutrition;\r\n    };\r\n\r\n    const calculateNewNutrient = (mealNutrient, foodNutrient, sign) => {\r\n        return (mealNutrient ? mealNutrient : 0) + sign * (foodNutrient ? foodNutrient : 0)\r\n    };\r\n\r\n    return (\r\n        <div style={{ 'margin': '50px' }}>\r\n            <div>\r\n                <div style={{ borderStyle: 'solid', borderWidth: '1px', padding: '20px' }}>\r\n                    <Dropdown onSelect={setMealName} value={mealName}>\r\n                        <Dropdown.Toggle style={{ backgroundColor: 'white', color: 'black' }}>\r\n                            {mealName ? mealName : \"Meal\"}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {mealOptions.map((option) => (\r\n                                <Dropdown.Item key={option.label} eventKey={option.label}>{option.label}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    {foods?.length > 0 && checkNutritionExists(mealNutrition) &&\r\n                        <div>\r\n                            Nutrition summary\r\n                            <NutritionTable nutrition={mealNutrition} />\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ marginTop: '20px' }}>Foods</div>\r\n                    <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        {foods.map((food) => (\r\n                            <EditableFood\r\n                                key={food._id ? food._id : food.fdcId}\r\n                                food={food}\r\n                                updateServingSize={(servingSize) => updateServingSize(food, servingSize)}\r\n                                removeFood={props.meal ? removeFoodFromEditForm : removeFoodFromAddForm}\r\n                            />\r\n                        ))}\r\n                    </span>\r\n\r\n                    <FoodSearch\r\n                        selectFood={addFood}\r\n                        showSelect\r\n                        fdcIds={fdcIds}\r\n                    />\r\n\r\n                    <div style={{ paddingTop: '20px' }}>\r\n                        <Button variant=\"secondary\" type=\"button\" onClick={props.cancel} style={{ marginRight: '5px' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                            {!props.meal && 'Add Meal'}\r\n                            {props.meal && 'Update Meal'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nexport default function Food(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <span>\r\n            {props.food.name}<br />\r\n            {<span>\r\n                serving: {props.food.serving}<br />\r\n                calories: {props.food.nutrition?.calories?.value} kcal<br />\r\n\r\n                {!displayNutritionInfo &&\r\n                    <span>\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)} style={{ marginTop: '10px', marginBottom: '20px' }}>See nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n                {displayNutritionInfo && checkNutritionExists(props.food.nutrition) &&\r\n                    <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} height='180px' />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)} style={{ marginTop: '10px', marginBottom: '20px' }}>Hide nutrition</Button>\r\n                    </span>\r\n                }\r\n            </span>}\r\n        </span>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport Food from './Food';\r\n\r\nexport default function Meal(props) {\r\n    return (\r\n        <Card\r\n            style={{ width: '24rem', margin: '0 auto' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>\r\n                <span>{props.meal.name}</span><br />\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.updateMeal()}>\r\n                    <FontAwesomeIcon icon={faEdit} style={{ color: 'black' }} />\r\n                </Button>\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.deleteMeal(props.meal._id)}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} style={{ color: 'black' }} />\r\n                </Button>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                {props.meal?.foods?.map((food, k) => {\r\n                    return (\r\n                        <span key={k}>\r\n                            <Food food={food} />\r\n                        </span>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n            {!!props.meal?.foods && checkNutritionExists(props.meal?.nutrition) &&\r\n                <div>\r\n                    Meal nutrition\r\n                    <NutritionTable nutrition={props.meal.nutrition} />\r\n                </div>\r\n            }\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SignInForm(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.handleSubmit(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={handleEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SignInForm from './SignInForm';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverURL } from './App';\r\n\r\nexport function getUserFromLocalStorage() {\r\n    return localStorage.getItem('currentUser');\r\n}\r\n\r\nexport default function SignIn(props) {\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('login');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (email, password, type) => {\r\n        const response = await fetch(serverURL + '/' + type, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            })\r\n        });\r\n\r\n        const responseText = await response.text();\r\n\r\n        if ((type === 'login' && response.status === 302) ||\r\n            (type === 'signup' && response.status === 201)) {\r\n            localStorage.setItem('currentUser', JSON.stringify(responseText));\r\n            props.setAuthenticated(true);\r\n            history.push('/days');\r\n        } else {\r\n            setError(\"error with \" + type + \"\\n\" + responseText);\r\n        }\r\n    };\r\n\r\n    const handleLoginSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'login');\r\n    };\r\n\r\n    const handleSignupSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'signup');\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '50%', height: 'auto' }}>\r\n            <Tabs\r\n                id=\"signin-tabs\"\r\n                activeKey={key}\r\n                onSelect={(k) => {\r\n                    setKey(k);\r\n                    setError('');\r\n                }}\r\n            >\r\n                <Tab eventKey=\"login\" title=\"Login\">\r\n                    <SignInForm\r\n                        handleSubmit={handleLoginSubmit}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"signup\" title=\"Sign Up\">\r\n                    <SignInForm\r\n                        handleSubmit={handleSignupSubmit}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n            {error && <div style={{ color: \"red\" }}>sign in unsuccessful :(</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport MyNavbar from './MyNavbar';\r\nimport EditMealForm from './EditMealForm';\r\nimport Meal from './Meal';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport { serverURL } from './App';\r\n\r\nexport default function Days(props) {\r\n    const [day, setDay] = useState();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [showAddMealForm, setShowAddMealForm] = useState(false);\r\n    const [editMeal, setEditMeal] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchDay(selectedDate);\r\n        // disabled lint on next line because otherwise lint would complain about fetchDays being a missing dependency\r\n        // when in reality, fetchDays is a method defined separately underneath, since it is used in other places\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const fetchDay = async (date) => {\r\n        const fetchedDay = await getDay(date);\r\n        setDay(fetchedDay);\r\n    };\r\n\r\n    const getDay = async (date) => {\r\n        const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getUTCDate();\r\n        const response = await fetch(serverURL + '/days/' + dateStr + '?userId=' + getUserFromLocalStorage(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const responseJSON = await response.json();\r\n        if (responseJSON._id === \"000000000000000000000000\") { // response for nonexistent record\r\n            return null;\r\n        }\r\n        return responseJSON;\r\n    };\r\n\r\n    const handleSelectedDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        fetchDay(date);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const onAddMealButtonClick = () => {\r\n        setShowAddMealForm(true);\r\n    };\r\n\r\n    const submitAddMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals?userId=' + getUserFromLocalStorage(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const cancelAddMealForm = () => {\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const submitEditMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + meal._id + '?userId=' + getUserFromLocalStorage(), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setEditMeal('');\r\n    };\r\n\r\n    const deleteMeal = async (mealId) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + mealId + '?userId=' + getUserFromLocalStorage(), {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n    };\r\n\r\n    const updateMeal = (meal) => {\r\n        if (editMeal) {\r\n            setEditMeal('');\r\n        } else {\r\n            setEditMeal(meal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            <div style={{ margin: '10px' }}>\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={handleSelectedDateChange}\r\n                />\r\n            </div>\r\n            {showAddMealForm && <EditMealForm\r\n                submit={submitAddMealForm}\r\n                cancel={cancelAddMealForm}\r\n            />}\r\n            {editMeal && <EditMealForm\r\n                submit={submitEditMealForm}\r\n                cancel={() => setEditMeal('')}\r\n                meal={editMeal}\r\n            />}\r\n            {!showAddMealForm && !editMeal &&\r\n                <Button onClick={onAddMealButtonClick} style={{ margin: '10px' }}>\r\n                    Add meal\r\n                </Button>\r\n            }\r\n            {!showAddMealForm && !editMeal && day && <div>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {day.meals && day.meals.map((meal, j) => (\r\n                    <Meal\r\n                        key={j}\r\n                        meal={meal}\r\n                        updateMeal={() => updateMeal(meal)}\r\n                        deleteMeal={deleteMeal}\r\n                    />\r\n                ))}\r\n                </div>\r\n                <div>\r\n                    {day?.meals && checkNutritionExists(day.nutrition) &&\r\n                        <span>\r\n                            Daily nutrition summary\r\n                            <NutritionTable nutrition={day.nutrition} />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>}\r\n            {!day?.meals && <div>no data for this date</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport MyNavbar from './MyNavbar';\r\nimport FoodSearch from './FoodSearch';\r\n\r\nexport default function FoodSearchPage(props) {\r\n    const [selectedFood, setSelectedFood] = useState('');\r\n\r\n    const onFoodSelected = (food) => {\r\n        setSelectedFood(food.FdcId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            {selectedFood && <span>selected food fdc ID: {selectedFood}</span>}\r\n            <FoodSearch selectFood={onFoodSelected} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SignIn from './SignIn';\r\n\r\nexport default function HomePage(props) {\r\n    return (\r\n        <div style={{ margin: '3%' }}>\r\n            <h3>Refactored Spoon</h3>\r\n            <div>an app to help you track what you eat and provide nutritional insights</div>\r\n            <span style={{ display: 'flex', justifyContent: 'center', margin: '5%' }}>\r\n                <SignIn setAuthenticated={props.setAuthenticated} />\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Days from './Days';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FoodSearchPage from './FoodSearchPage';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport HomePage from './HomePage';\r\n\r\nexport const serverURL = \"https://shielded-earth-02834.herokuapp.com\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getUserFromLocalStorage());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} >\r\n        <Route exact path=\"/\" render={() => <HomePage setAuthenticated={setIsAuthenticated} />} />\r\n        {!isAuthenticated &&\r\n          <span>\r\n            <Redirect to=\"/\" />\r\n          </span>\r\n        }\r\n        {isAuthenticated &&\r\n          <span>\r\n            <Route path=\"/days\" render={() => <Days setAuthenticated={setIsAuthenticated} />} />\r\n            <Route path=\"/foodsearch\" render={() => <FoodSearchPage setAuthenticated={setIsAuthenticated} />} />\r\n          </span>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}