{"version":3,"sources":["MyNavbar.jsx","FoodSearch.jsx","NutritionTable.jsx","EditableFood.jsx","EditMealForm.jsx","Food.jsx","Meal.jsx","SignInForm.jsx","SignIn.jsx","Days.jsx","FoodSearchPage.jsx","HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","history","useHistory","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","process","Button","variant","onClick","localStorage","removeItem","setAuthenticated","push","NutrientIds","ENERGY","CALCIUM","IRON","VITAMIN_A","VITAMIN_C","PROTEIN","FAT","CARBOHYDRATE","SUGAR","FIBER","POTASSIUM","SODIUM","CHOLESTEROL","FoodSearch","useState","foodKeyword","setFoodKeyword","searchResults","setSearchResults","loading","setLoading","handleSubmitSearch","event","a","preventDefault","getUSDASearchResults","keyword","fetch","serverURL","method","headers","body","JSON","stringify","food","pageSize","response","searchResultFdcIds","json","responseJSON","forEach","result","fdcId","totalPages","TotalPages","console","log","foods","foodsDetailRes","foodsDetailResJSON","usdaSearchResults","newUSDASearchResult","details","filter","detail","style","display","flexDirection","justifyContent","Form","inline","onSubmit","margin","FormControl","type","placeholder","value","onChange","target","flexWrap","Spinner","animation","map","searchResult","Card","key","border","width","Header","description","Body","brandOwner","ingredients","Table","marginTop","foodNutrients","foodNutrient","includes","nutrient","name","amount","unitName","showSelect","fdcIds","selectFood","checkNutritionExists","nutrition","Object","keys","length","constructor","NutritionTable","round","Math","overflowY","overflowX","maxHeight","height","maxWidth","marginLeft","position","top","backgroundColor","float","calories","protein","carbs","fat","sugar","fiber","sodium","calcium","iron","cholesterol","potassium","vitaminA","vitaminC","EditableFood","displayNutritionInfo","setDisplayNutritionInfo","serving","e","updateServingSize","removeFood","_id","mealOptions","label","EditMealForm","meal","setFoods","mealName","setMealName","mealNutrition","setMealNutrition","setFdcIds","newServingSize","newFoods","oldFood","parseInt","getRoundedWholeNutrient","usdaNutrition","getRounded2DecNutrient","updateMealNutrition","servingSize","removeFoodFromAddForm","garbageFdcId","removedFood","newMealNutrition","calculateNewMealNutrition","removeFoodFromEditForm","garbageId","updatedFood","sign","calculateNewNutrient","mealNutrient","borderStyle","borderWidth","padding","Dropdown","onSelect","color","Menu","option","Item","eventKey","foodDetails","newFood","brand","paddingTop","cancel","marginRight","formattedFoods","submit","Food","group","Meal","size","updateMeal","icon","faEdit","deleteMeal","faTrashAlt","Text","k","SignInForm","email","setEmail","password","setPassword","handleSubmit","Group","controlId","Label","Control","getUserFromLocalStorage","getItem","SignIn","setKey","error","setError","text","responseText","status","setItem","Tabs","activeKey","Tab","title","Days","day","setDay","Date","selectedDate","setSelectedDate","showAddMealForm","setShowAddMealForm","editMeal","setEditMeal","useEffect","fetchDay","date","getDay","fetchedDay","dateStr","getFullYear","getMonth","getUTCDate","submitAddMealForm","submitEditMealForm","mealId","selected","meals","j","FoodSearchPage","selectedFood","setSelectedFood","FdcId","HomePage","App","isAuthenticated","setIsAuthenticated","basename","exact","path","render","to","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.204fab04.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MyNavbar(props) {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('currentUser');\r\n        props.setAuthenticated(false);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand>Refactored Spoon</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/days\"}>Days</Nav.Link>\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/foodsearch\"}>Food Search</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            <Button variant=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n        </Navbar>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { serverURL } from './App';\r\n\r\nexport const NutrientIds = {\r\n    ENERGY: 1008,\r\n    CALCIUM: 1087,\r\n    IRON: 1089,\r\n    VITAMIN_A: 1104,\r\n    VITAMIN_C: 1162,\r\n    PROTEIN: 1003,\r\n    FAT: 1004,\r\n    CARBOHYDRATE: 1005,\r\n    SUGAR: 2000,\r\n    FIBER: 1079,\r\n    POTASSIUM: 1092,\r\n    SODIUM: 1093,\r\n    CHOLESTEROL: 1253,\r\n};\r\n\r\nexport default function FoodSearch(props) {\r\n    const [foodKeyword, setFoodKeyword] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmitSearch = async event => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await getUSDASearchResults(foodKeyword);\r\n        setLoading(false);\r\n    };\r\n\r\n    const getUSDASearchResults = async (keyword) => {\r\n        const response = await fetch(serverURL + '/food/search', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                food: keyword,\r\n                pageSize: \"9\",\r\n            }),\r\n        });\r\n\r\n        const searchResultFdcIds = [];\r\n\r\n        const responseJSON = await response.json();\r\n        if (!responseJSON) {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n        responseJSON.forEach((result) => {\r\n            searchResultFdcIds.push(result.fdcId);\r\n        });\r\n\r\n        const totalPages = responseJSON.TotalPages;\r\n        console.log(\"totalPages\");\r\n        console.log(totalPages);\r\n\r\n        const foodsDetailRes = await fetch(serverURL + '/foods/detail', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                foods: searchResultFdcIds,\r\n            }),\r\n        });\r\n\r\n        const foodsDetailResJSON = await foodsDetailRes.json();\r\n\r\n        const usdaSearchResults = [];\r\n        responseJSON.forEach((result) => {\r\n            const newUSDASearchResult = {\r\n                result: result,\r\n                details: foodsDetailResJSON.filter((detail) => detail.fdcId === result.fdcId)[0],\r\n            };\r\n            usdaSearchResults.push(newUSDASearchResult);\r\n        });\r\n\r\n        setSearchResults(usdaSearchResults);\r\n    };\r\n\r\n    const handleFoodKeywordChange = event => {\r\n        setFoodKeyword(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n            <span style={{ flexDirection: 'column' }}>\r\n                <Form inline onSubmit={handleSubmitSearch} style={{ margin: '10px' }}>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        placeholder=\"Search for food\"\r\n                        className=\"mr-sm-2\"\r\n                        value={foodKeyword}\r\n                        onChange={handleFoodKeywordChange}\r\n                    />\r\n                    <Button type=\"submit\" style={{ margin: '5px' }}>Search</Button>\r\n                    <Button variant=\"secondary\" onClick={() => setSearchResults([])} style={{ margin: '5px' }}>Clear search</Button>\r\n                </Form>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                    {loading && <Spinner animation=\"border\" />}\r\n                    {searchResults && searchResults.map((searchResult) => (\r\n                        <Card key={searchResult.result.fdcId} border=\"primary\" style={{ width: '30%', margin: '10px' }}>\r\n                            <Card.Header>\r\n                                {searchResult.result.description}\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                FdcId: {searchResult.result.fdcId}<br />\r\n                                {searchResult.result.brandOwner && <span>Brand: {searchResult.result.brandOwner}<br /></span>}\r\n                                {searchResult.result.ingredients &&\r\n                                    <span>\r\n                                        Ingredients: {searchResult.result.ingredients}<br />\r\n                                    </span>\r\n                                }\r\n\r\n                                {searchResult.details &&\r\n                                    <Table style={{ marginTop: '5px' }}>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Nutrient</th>\r\n                                                <th>Amount (per 100 grams)</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {searchResult.details.foodNutrients.filter((foodNutrient) => [NutrientIds.ENERGY, NutrientIds.PROTEIN, NutrientIds.CARBOHYDRATE, NutrientIds.FAT].includes(foodNutrient.nutrient.id)\r\n                                            ).map((foodNutrient) => (\r\n                                                <tr key={foodNutrient.id}>\r\n                                                    <td>{foodNutrient.nutrient.name}</td>\r\n                                                    <td>{foodNutrient.amount} {foodNutrient.nutrient.unitName}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                }\r\n                                {props.showSelect && !props.fdcIds?.includes(searchResult.result.fdcId) &&\r\n                                    <Button onClick={() => props.selectFood(searchResult.result, searchResult.details)}>Select food</Button>\r\n                                }\r\n                                {props.showSelect && props.fdcIds?.includes(searchResult.result.fdcId) &&\r\n                                    <span style={{ 'color': 'green' }}>Food selected</span>\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport function checkNutritionExists(nutrition) {\r\n    return nutrition && !(Object.keys(nutrition).length === 0 && nutrition.constructor === Object);\r\n};\r\n\r\nexport default function NutritionTable(props) {\r\n    const round = (nutrient) => {\r\n        return Math.round(nutrient * 100) / 100;\r\n    };\r\n\r\n    return (\r\n        <span style={{ display: 'block', overflowY: 'scroll', overflowX: 'hidden', maxHeight: props.height ? props.height : '300px', border: '1px solid lightGrey', maxWidth: '450px', margin: '0 auto' }}>\r\n\r\n        <Table>\r\n            <thead style={{ display: 'block', marginLeft: '27%', position: 'sticky', top: '0', backgroundColor: 'white' }}>\r\n                <tr>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Nutrient</th>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{ marginLeft: '25%', float: 'left' }}>\r\n                {!!props.nutrition.calories && <tr>\r\n                    <td>Calories</td>\r\n                    <td>{round(props.nutrition.calories)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.protein && <tr>\r\n                    <td>Protein</td>\r\n                    <td>{round(props.nutrition.protein)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.carbs && <tr>\r\n                    <td>Carbs</td>\r\n                    <td>{round(props.nutrition.carbs)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fat && <tr>\r\n                    <td>Fat</td>\r\n                    <td>{round(props.nutrition.fat)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sugar && <tr>\r\n                    <td>Sugar</td>\r\n                    <td>{round(props.nutrition.sugar)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fiber && <tr>\r\n                    <td>Fiber</td>\r\n                    <td>{round(props.nutrition.fiber)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sodium && <tr>\r\n                    <td>Sodium</td>\r\n                    <td>{round(props.nutrition.sodium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.calcium && <tr>\r\n                    <td>Calcium</td>\r\n                    <td>{round(props.nutrition.calcium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.iron && <tr>\r\n                    <td>Iron</td>\r\n                    <td>{round(props.nutrition.iron)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.cholesterol && <tr>\r\n                    <td>Cholesterol</td>\r\n                    <td>{round(props.nutrition.cholesterol)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.potassium && <tr>\r\n                    <td>Potassium</td>\r\n                    <td>{round(props.nutrition.potassium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminA && <tr>\r\n                    <td>Vitamin A</td>\r\n                    <td>{round(props.nutrition.vitaminA)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminC && <tr>\r\n                    <td>Vitamin C</td>\r\n                    <td>{round(props.nutrition.vitaminC)}</td>\r\n                </tr>}\r\n            </tbody>\r\n        </Table>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable from './NutritionTable';\r\n\r\nexport default function EditableFood(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: '30%', margin: '10px' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>{props.food.fdcId}</Card.Header>\r\n                    {props.food.fdcId && <span style={{ margin: '5px' }}>FDC ID: {props.food.fdcId}<br /></span>}\r\n                    {props.food.name && <span style={{ margin: '5px' }}>Name: {props.food.name}<br /></span>}\r\n                    {props.food.details && <span style={{ margin: '5px' }}>Description: {props.food.details.description}<br /></span>}\r\n                    <span style={{ margin: '5px' }}>Calories: {props.food.nutrition.calories}<br /></span>\r\n\r\n                    {!displayNutritionInfo && \r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                            <br />\r\n                        </span>\r\n                    }\r\n                    {displayNutritionInfo && <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>}\r\n\r\n                    <span>\r\n                        Serving size:\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            placeholder={100}\r\n                            style={{ width: '80px', display: 'inline-block', margin: '5px' }}\r\n                            value={props.food.serving}\r\n                            onChange={(e) => props.updateServingSize(props.food, e.target.value)}\r\n                        />\r\n                        g\r\n                    </span><br />\r\n                <Button variant=\"danger\" onClick={() => props.removeFood(props.food._id ? props.food._id : props.food.fdcId)}>Remove</Button>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport FoodSearch, { NutrientIds } from './FoodSearch';\r\nimport EditableFood from './EditableFood';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nconst mealOptions = [\r\n    { value: 'breakfast', label: 'Breakfast' },\r\n    { value: 'lunch', label: 'Lunch' },\r\n    { value: 'dinner', label: 'Dinner' }\r\n]\r\n\r\nexport default function EditMealForm(props) {\r\n    const [foods, setFoods] = useState(props.meal?.foods ? props.meal.foods : []);\r\n    const [mealName, setMealName] = useState(props.meal?.name ? props.meal.name : '');\r\n    const [mealNutrition, setMealNutrition] = useState(props.meal?.nutrition ? props.meal.nutrition : {});\r\n    const [fdcIds, setFdcIds] = useState([]);\r\n\r\n    const updateMealNutrition = () => {\r\n        const nutrition = {\r\n            calories: 0,\r\n            protein: 0,\r\n            carbs: 0,\r\n            fat: 0,\r\n            sugar: 0,\r\n            fiber: 0,\r\n            sodium: 0,\r\n            calcium: 0,\r\n            iron: 0,\r\n            cholesterol: 0,\r\n            potassium: 0,\r\n            vitaminA: 0,\r\n            vitaminC: 0,\r\n        };\r\n        foods.forEach((food) => {\r\n            nutrition.calories += food.nutrition.calories;\r\n            nutrition.protein += food.nutrition.protein;\r\n            nutrition.carbs += food.nutrition.carbs;\r\n            nutrition.fat += food.nutrition.fat;\r\n            nutrition.sugar += food.nutrition.sugar;\r\n            nutrition.fiber += food.nutrition.fiber;\r\n            nutrition.sodium += food.nutrition.sodium;\r\n            nutrition.calcium += food.nutrition.calcium;\r\n            nutrition.iron += food.nutrition.iron;\r\n            nutrition.cholesterol += food.nutrition.cholesterol;\r\n            nutrition.potassium += food.nutrition.potassium;\r\n            nutrition.vitaminA += food.nutrition.vitaminA;\r\n            nutrition.vitaminC += food.nutrition.vitaminC;\r\n        });\r\n\r\n        setMealNutrition(nutrition);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const formattedFoods = foods.map((food) => {\r\n            food.name = food.name ? food.name : food.details.description;\r\n            return food;\r\n        });\r\n        const meal = {\r\n            _id: props.meal?._id,\r\n            name: mealName,\r\n            foods: formattedFoods,\r\n            nutrition: mealNutrition,\r\n        };\r\n        props.submit(meal);\r\n    };\r\n\r\n    const updateServingSize = (food, newServingSize) => {\r\n        const newFoods = foods.map((oldFood) => {\r\n            const isMatch = food._id ? oldFood._id === food._id : oldFood.fdcId === food.fdcId;\r\n            if (isMatch) {\r\n                food.serving = parseInt(newServingSize);\r\n                food.nutrition = {\r\n                    calories: getRoundedWholeNutrient(oldFood.usdaNutrition.calories, newServingSize),\r\n                    protein: getRounded2DecNutrient(oldFood.usdaNutrition.protein, newServingSize),\r\n                    carbs: getRounded2DecNutrient(oldFood.usdaNutrition.carbs, newServingSize),\r\n                    fat: getRounded2DecNutrient(oldFood.usdaNutrition.fat, newServingSize),\r\n                    sugar: getRounded2DecNutrient(oldFood.usdaNutrition.sugar, newServingSize),\r\n                    fiber: getRounded2DecNutrient(oldFood.usdaNutrition.fiber, newServingSize),\r\n                    sodium: getRoundedWholeNutrient(oldFood.usdaNutrition.sodium, newServingSize),\r\n                    calcium: getRoundedWholeNutrient(oldFood.usdaNutrition.calcium, newServingSize),\r\n                    iron: getRounded2DecNutrient(oldFood.usdaNutrition.iron, newServingSize),\r\n                    cholesterol: getRoundedWholeNutrient(oldFood.usdaNutrition.cholesterol, newServingSize),\r\n                    potassium: getRoundedWholeNutrient(oldFood.usdaNutrition.potassium, newServingSize),\r\n                    vitaminA: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminA, newServingSize),\r\n                    vitaminC: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminC, newServingSize),\r\n                };\r\n                return food;\r\n            }\r\n            return oldFood;\r\n        });\r\n        setFoods(newFoods);\r\n        updateMealNutrition();\r\n    };\r\n\r\n    const getRounded2DecNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient * servingSize) / 100;\r\n    };\r\n\r\n    const getRoundedWholeNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient / 100 * servingSize);\r\n    };\r\n\r\n    const addFood = (food, foodDetails) => {\r\n        const calories = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.ENERGY)[0]?.amount;\r\n        const protein = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.PROTEIN)[0]?.amount;\r\n        const carbs = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CARBOHYDRATE)[0]?.amount;\r\n        const fat = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FAT)[0]?.amount;\r\n        const sugar = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SUGAR)[0]?.amount;\r\n        const fiber = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FIBER)[0]?.amount;\r\n        const sodium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SODIUM)[0]?.amount;\r\n        const calcium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CALCIUM)[0]?.amount;\r\n        const iron = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.IRON)[0]?.amount;\r\n        const cholesterol = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CHOLESTEROL)[0]?.amount;\r\n        const potassium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.POTASSIUM)[0]?.amount;\r\n        const vitaminA = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_A)[0]?.amount;\r\n        const vitaminC = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_C)[0]?.amount;\r\n\r\n\r\n        const newFood = {\r\n            brand: food.brandOwner,\r\n            ingredients: food.ingredients,\r\n            fdcId: food.fdcId,\r\n            serving: 100,\r\n            nutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            usdaNutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            details: foodDetails,\r\n        };\r\n        setFoods(foods => [...foods, newFood]);\r\n        setFdcIds(fdcIds => [...fdcIds, food.fdcId]);\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(newFood, 1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromAddForm = (garbageFdcId) => {\r\n        const removedFood = foods.filter(food => food.fdcId === garbageFdcId)[0];\r\n\r\n        setFoods(foods.filter(food => food.fdcId !== garbageFdcId));\r\n        setFdcIds(fdcIds.filter(fdcId => fdcId !== garbageFdcId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromEditForm = (garbageId) => {\r\n        const removedFood = foods.filter(food => food._id === garbageId)[0];\r\n        setFoods(foods.filter(food => food._id !== garbageId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const calculateNewMealNutrition = (updatedFood, sign) => {\r\n        return {\r\n            calories: calculateNewNutrient(mealNutrition.calories, updatedFood.nutrition.calories, sign),\r\n            protein: calculateNewNutrient(mealNutrition.protein, updatedFood.nutrition.protein, sign),\r\n            carbs: calculateNewNutrient(mealNutrition.carbs, updatedFood.nutrition.carbs, sign),\r\n            fat: calculateNewNutrient(mealNutrition.fat, updatedFood.nutrition.fat, sign),\r\n            sugar: calculateNewNutrient(mealNutrition.sugar, updatedFood.nutrition.sugar, sign),\r\n            fiber: calculateNewNutrient(mealNutrition.fiber, updatedFood.nutrition.fiber, sign),\r\n            sodium: calculateNewNutrient(mealNutrition.sodium, updatedFood.nutrition.sodium, sign),\r\n            calcium: calculateNewNutrient(mealNutrition.calcium, updatedFood.nutrition.calcium, sign),\r\n            iron: calculateNewNutrient(mealNutrition.iron, updatedFood.nutrition.iron, sign),\r\n            cholesterol: calculateNewNutrient(mealNutrition.cholesterol, updatedFood.nutrition.cholesterol, sign),\r\n            potassium: calculateNewNutrient(mealNutrition.potassium, updatedFood.nutrition.potassium, sign),\r\n            vitaminA: calculateNewNutrient(mealNutrition.vitaminA, updatedFood.nutrition.vitaminA, sign),\r\n            vitaminC: calculateNewNutrient(mealNutrition.vitaminC, updatedFood.nutrition.vitaminC, sign),\r\n        };\r\n    };\r\n\r\n    const calculateNewNutrient = (mealNutrient, foodNutrient, sign) => {\r\n        return (mealNutrient ? mealNutrient : 0) + sign * (foodNutrient ? foodNutrient : 0);\r\n    };\r\n\r\n    return (\r\n        <div style={{ 'margin': '50px' }}>\r\n            <div>\r\n                <div style={{ borderStyle: 'solid', borderWidth: '1px', padding: '20px' }}>\r\n                    <Dropdown onSelect={setMealName} value={mealName}>\r\n                        <Dropdown.Toggle style={{ backgroundColor: 'white', color: 'black' }}>\r\n                            {mealName ? mealName : \"Meal\"}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {mealOptions.map((option) => (\r\n                                <Dropdown.Item key={option.label} eventKey={option.label}>{option.label}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    {checkNutritionExists(mealNutrition) &&\r\n                        <div>\r\n                            Nutrition summary\r\n                            <NutritionTable nutrition={mealNutrition} />\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ marginTop: '20px' }}>Foods</div>\r\n                    <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        {foods.map((food) => (\r\n                            <EditableFood\r\n                                key={food._id ? food._id : food.fdcId}\r\n                                food={food}\r\n                                updateServingSize={updateServingSize}\r\n                                removeFood={props.meal ? removeFoodFromEditForm : removeFoodFromAddForm}\r\n                            />\r\n                        ))}\r\n                    </span>\r\n\r\n                    <FoodSearch\r\n                        selectFood={addFood}\r\n                        showSelect\r\n                        fdcIds={fdcIds}\r\n                    />\r\n\r\n                    <div style={{ paddingTop: '20px' }}>\r\n                        <Button variant=\"secondary\" type=\"button\" onClick={props.cancel} style={{ marginRight: '5px' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                            {!props.meal && 'Add Meal'}\r\n                            {props.meal && 'Update Meal'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nexport default function Food(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <span>\r\n            {props.food.name}<br />\r\n            {<span>\r\n                {props.food.group && <span>group: {props.food.group}<br /></span>}\r\n                serving: {props.food.serving}<br />\r\n                calories: {props.food?.nutrition?.calories}<br />\r\n\r\n                {!displayNutritionInfo &&\r\n                    <span>\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n                {displayNutritionInfo && checkNutritionExists(props.food.nutrition) &&\r\n                    <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} height='180px' />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n            </span>}\r\n        </span>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport Food from './Food';\r\n\r\nexport default function Meal(props) {\r\n    return (\r\n        <Card\r\n            style={{ width: '24rem', margin: '0 auto' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>\r\n                <span>{props.meal.name}</span><br />\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.updateMeal(props.meal)}>\r\n                    <FontAwesomeIcon icon={faEdit} style={{ color: 'black' }} />\r\n                </Button>\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.deleteMeal(props.meal._id)}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} style={{ color: 'black' }} />\r\n                </Button>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.meal?.foods?.map((food, k) => (\r\n                        <span key={k}>\r\n                            <Food food={food} />\r\n                        </span>\r\n                    ))}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <div>\r\n                Meal nutrition\r\n                {checkNutritionExists(props.meal?.nutrition) && <NutritionTable nutrition={props.meal.nutrition} />}\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SignInForm(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.handleSubmit(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={handleEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SignInForm from './SignInForm';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverURL } from './App';\r\n\r\nexport function getUserFromLocalStorage() {\r\n    return localStorage.getItem('currentUser');\r\n}\r\n\r\nexport default function SignIn(props) {\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('login');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (email, password, type) => {\r\n        const response = await fetch(serverURL + '/' + type, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            })\r\n        });\r\n\r\n        const responseText = await response.text();\r\n\r\n        if ((type === 'login' && response.status === 302) ||\r\n            (type === 'signup' && response.status === 201)) {\r\n            localStorage.setItem('currentUser', JSON.stringify(responseText));\r\n            props.setAuthenticated(true);\r\n            history.push('/days');\r\n        } else {\r\n            setError(\"error with \" + type + \"\\n\" + responseText);\r\n        }\r\n    };\r\n\r\n    const handleLoginSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'login');\r\n    };\r\n\r\n    const handleSignupSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'signup');\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '50%', height: 'auto' }}>\r\n            <Tabs\r\n                id=\"signin-tabs\"\r\n                activeKey={key}\r\n                onSelect={(k) => {\r\n                    setKey(k);\r\n                    setError('');\r\n                }}\r\n            >\r\n                <Tab eventKey=\"login\" title=\"Login\">\r\n                    <SignInForm\r\n                        handleSubmit={handleLoginSubmit}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"signup\" title=\"Sign Up\">\r\n                    <SignInForm\r\n                        handleSubmit={handleSignupSubmit}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n            {error && <div style={{ color: \"red\" }}>sign in unsuccessful :(</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport MyNavbar from './MyNavbar';\r\nimport EditMealForm from './EditMealForm';\r\nimport Meal from './Meal';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport { serverURL } from './App';\r\n\r\nexport default function Days(props) {\r\n    const [day, setDay] = useState();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [showAddMealForm, setShowAddMealForm] = useState(false);\r\n    const [editMeal, setEditMeal] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchDay(selectedDate);\r\n        // disabled lint on next line because otherwise lint would complain about fetchDays being a missing dependency\r\n        // when in reality, fetchDays is a method defined separately underneath, since it is used in other places\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const fetchDay = async (date) => {\r\n        const fetchedDay = await getDay(date);\r\n        setDay(fetchedDay);\r\n    };\r\n\r\n    const getDay = async (date) => {\r\n        const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getUTCDate();\r\n        const response = await fetch(serverURL + '/days/' + dateStr + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const responseJSON = await response.json();\r\n        if (responseJSON._id === \"000000000000000000000000\") { // response for nonexistent record\r\n            return null;\r\n        }\r\n        return responseJSON;\r\n    };\r\n\r\n    const handleSelectedDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        fetchDay(date);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const onAddMealButtonClick = () => {\r\n        setShowAddMealForm(true);\r\n    };\r\n\r\n    const submitAddMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals?user=' + getUserFromLocalStorage(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const cancelAddMealForm = () => {\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const submitEditMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + meal._id + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setEditMeal('');\r\n    };\r\n\r\n    const deleteMeal = async (mealId) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + mealId + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n    };\r\n\r\n    const updateMeal = (meal) => {\r\n        if (editMeal) {\r\n            setEditMeal('');\r\n        } else {\r\n            setEditMeal(meal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            <div style={{ margin: '10px' }}>\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={handleSelectedDateChange}\r\n                />\r\n            </div>\r\n            {showAddMealForm && <EditMealForm\r\n                submit={submitAddMealForm}\r\n                cancel={cancelAddMealForm}\r\n            />}\r\n            {editMeal && <EditMealForm\r\n                submit={submitEditMealForm}\r\n                cancel={() => setEditMeal('')}\r\n                meal={editMeal}\r\n            />}\r\n            {!showAddMealForm && !editMeal &&\r\n                <Button onClick={onAddMealButtonClick} style={{ margin: '10px' }}>\r\n                    Add meal\r\n                </Button>\r\n            }\r\n            {!showAddMealForm && !editMeal && day && <div>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {day.meals && day.meals.map((meal, j) => (\r\n                    <Meal\r\n                        key={j}\r\n                        meal={meal}\r\n                        updateMeal={updateMeal}\r\n                        deleteMeal={deleteMeal}\r\n                    />\r\n                ))}\r\n                </div>\r\n                <div>\r\n                    {checkNutritionExists(day.nutrition) &&\r\n                        <span>\r\n                            Daily nutrition summary\r\n                            <NutritionTable nutrition={day.nutrition} />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>}\r\n            {!day && <div>no data for this date</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport MyNavbar from './MyNavbar';\r\nimport FoodSearch from './FoodSearch';\r\n\r\nexport default function FoodSearchPage(props) {\r\n    const [selectedFood, setSelectedFood] = useState('');\r\n\r\n    const onFoodSelected = (food) => {\r\n        setSelectedFood(food.FdcId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            {selectedFood && <span>selected food fdc ID: {selectedFood}</span>}\r\n            <FoodSearch selectFood={onFoodSelected} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SignIn from './SignIn';\r\n\r\nexport default function HomePage(props) {\r\n    return (\r\n        <div style={{ margin: '3%' }}>\r\n            <h3>Refactored Spoon</h3>\r\n            <div>an app to help you track what you eat and provide nutritional insights</div>\r\n            <span style={{ display: 'flex', justifyContent: 'center', margin: '5%' }}>\r\n                <SignIn setAuthenticated={props.setAuthenticated} />\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Days from './Days';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FoodSearchPage from './FoodSearchPage';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport HomePage from './HomePage';\r\n\r\nexport const serverURL = \"https://shielded-earth-02834.herokuapp.com\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getUserFromLocalStorage());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} >\r\n        <Route exact path=\"/\" render={() => <HomePage setAuthenticated={setIsAuthenticated} />} />\r\n        {!isAuthenticated &&\r\n          <span>\r\n            <Redirect to=\"/\" />\r\n          </span>\r\n        }\r\n        {isAuthenticated &&\r\n          <span>\r\n            <Route path=\"/days\" render={() => <Days setAuthenticated={setIsAuthenticated} />} />\r\n            <Route path=\"/foodsearch\" render={() => <FoodSearchPage setAuthenticated={setIsAuthenticated} />} />\r\n          </span>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}