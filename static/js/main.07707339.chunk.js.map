{"version":3,"sources":["MyNavbar.jsx","FoodSearchResult.jsx","FoodSearch.jsx","NutritionTable.jsx","EditableFood.jsx","EditMealForm.jsx","Food.jsx","Meal.jsx","SignInForm.jsx","SignIn.jsx","Days.jsx","FoodSearchPage.jsx","HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","history","useHistory","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","process","Button","variant","onClick","localStorage","removeItem","setAuthenticated","push","NutrientIds","ENERGY","CALCIUM","IRON","VITAMIN_A","VITAMIN_C","PROTEIN","FAT","CARBOHYDRATE","SUGAR","FIBER","POTASSIUM","SODIUM","CHOLESTEROL","FoodSearchResult","Card","key","searchResult","result","fdcId","border","style","width","margin","Header","description","Body","brandOwner","ingredients","details","foodNutrients","Table","marginTop","filter","foodNutrient","includes","nutrient","map","name","amount","unitName","showSelect","fdcIds","selectFood","FoodSearch","useState","foodKeyword","setFoodKeyword","searchResults","setSearchResults","loading","setLoading","totalPages","setTotalPages","pageNumber","setPageNumber","pageChangeError","setPageChangeError","handleSubmitSearch","event","a","preventDefault","searchFood","handleSubmitPageChange","keyword","pageSize","searchUSDAFood","searchResponse","searchedFoods","foods","length","searchResultFdcIds","forEach","currentPage","getUSDAFoodDetailsBulk","foodsDetails","usdaSearchResults","i","newUSDASearchResult","fetch","serverURL","method","headers","body","JSON","stringify","generalSearchInput","requireAllWords","response","json","foodsDetailRes","display","flexDirection","justifyContent","flexWrap","Form","inline","onSubmit","FormControl","type","placeholder","value","onChange","target","Spinner","animation","parseInt","color","checkNutritionExists","nutrition","Object","keys","constructor","NutritionTable","round","Math","overflowY","overflowX","maxHeight","height","maxWidth","marginLeft","position","top","backgroundColor","float","calories","protein","carbs","fat","sugar","fiber","sodium","calcium","iron","cholesterol","potassium","vitaminA","vitaminC","EditableFood","displayNutritionInfo","setDisplayNutritionInfo","food","serving","e","updateServingSize","removeFood","_id","mealOptions","label","EditMealForm","meal","setFoods","mealName","setMealName","mealNutrition","setMealNutrition","setFdcIds","newServingSize","newFoods","oldFood","getRoundedWholeNutrient","usdaNutrition","getRounded2DecNutrient","updateMealNutrition","servingSize","removeFoodFromAddForm","garbageFdcId","removedFood","newMealNutrition","calculateNewMealNutrition","removeFoodFromEditForm","garbageId","updatedFood","sign","calculateNewNutrient","mealNutrient","borderStyle","borderWidth","padding","Dropdown","onSelect","Menu","option","Item","eventKey","foodDetails","newFood","brand","paddingTop","cancel","marginRight","formattedFoods","submit","Food","group","Meal","size","updateMeal","icon","faEdit","deleteMeal","faTrashAlt","Text","k","SignInForm","email","setEmail","password","setPassword","handleSubmit","Group","controlId","Label","Control","getUserFromLocalStorage","getItem","SignIn","setKey","error","setError","text","responseText","status","setItem","Tabs","activeKey","Tab","title","Days","day","setDay","Date","selectedDate","setSelectedDate","showAddMealForm","setShowAddMealForm","editMeal","setEditMeal","useEffect","fetchDay","date","getDay","fetchedDay","dateStr","getFullYear","getMonth","getUTCDate","responseJSON","submitAddMealForm","submitEditMealForm","mealId","selected","meals","j","FoodSearchPage","selectedFood","setSelectedFood","FdcId","HomePage","App","isAuthenticated","setIsAuthenticated","basename","exact","path","render","to","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.07707339.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MyNavbar(props) {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('currentUser');\r\n        props.setAuthenticated(false);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand>Refactored Spoon</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/days\"}>Days</Nav.Link>\r\n                    <Nav.Link href={process.env.PUBLIC_URL + \"/foodsearch\"}>Food Search</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            <Button variant=\"secondary\" onClick={handleLogout}>Logout</Button>\r\n        </Navbar>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const NutrientIds = {\r\n    ENERGY: 1008,\r\n    CALCIUM: 1087,\r\n    IRON: 1089,\r\n    VITAMIN_A: 1104,\r\n    VITAMIN_C: 1162,\r\n    PROTEIN: 1003,\r\n    FAT: 1004,\r\n    CARBOHYDRATE: 1005,\r\n    SUGAR: 2000,\r\n    FIBER: 1079,\r\n    POTASSIUM: 1092,\r\n    SODIUM: 1093,\r\n    CHOLESTEROL: 1253,\r\n};\r\n\r\nexport default function FoodSearchResult(props) {\r\n    return (\r\n        <Card key={props.searchResult.result.fdcId} border=\"primary\" style={{ width: '30%', margin: '10px' }}>\r\n            <Card.Header>\r\n                {props.searchResult.result.description}\r\n            </Card.Header>\r\n            <Card.Body>\r\n                FdcId: {props.searchResult.result.fdcId}<br />\r\n                {props.searchResult.result.brandOwner && <span>Brand: {props.searchResult.result.brandOwner}<br /></span>}\r\n                {props.searchResult.result.ingredients &&\r\n                    <span>\r\n                        Ingredients: {props.searchResult.result.ingredients}<br />\r\n                    </span>\r\n                }\r\n                {props.searchResult?.details?.foodNutrients &&\r\n                    <Table style={{ marginTop: '5px' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nutrient</th>\r\n                                <th>Amount (per 100 grams)</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {props.searchResult.details.foodNutrients.filter((foodNutrient) => [NutrientIds.ENERGY, NutrientIds.PROTEIN, NutrientIds.CARBOHYDRATE, NutrientIds.FAT].includes(foodNutrient.nutrient.id)\r\n                            ).map((foodNutrient) => (\r\n                                <tr key={foodNutrient.id}>\r\n                                    <td>{foodNutrient.nutrient.name}</td>\r\n                                    <td>{foodNutrient.amount} {foodNutrient.nutrient.unitName}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                }\r\n                {props.showSelect && !props.fdcIds?.includes(props.searchResult.result.fdcId) &&\r\n                    <Button onClick={() => props.selectFood(props.searchResult.result, props.searchResult.details)}>Select food</Button>\r\n                }\r\n                {props.showSelect && props.fdcIds?.includes(props.searchResult.result.fdcId) &&\r\n                    <span style={{ 'color': 'green' }}>Food selected</span>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { serverURL } from './App';\r\nimport FoodSearchResult from './FoodSearchResult';\r\n\r\nexport default function FoodSearch(props) {\r\n    const [foodKeyword, setFoodKeyword] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [pageChangeError, setPageChangeError] = useState(\"\");\r\n\r\n    const handleSubmitSearch = async event => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await searchFood(foodKeyword);\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSubmitPageChange = async event => {\r\n        event.preventDefault();\r\n        if (pageNumber > totalPages) {\r\n            setPageChangeError(\"error! page \" + pageNumber + \" does not exist.\");\r\n            return;\r\n        }\r\n        setPageChangeError(\"\");\r\n        setLoading(true);\r\n        setSearchResults([]);\r\n        await searchFood(foodKeyword, 9, pageNumber);\r\n        setLoading(false);\r\n    };\r\n\r\n    const searchFood = async (keyword, pageSize = 9, pageNumber = 1) => {\r\n        const searchResponse = await searchUSDAFood(keyword, pageSize, pageNumber);\r\n        const searchedFoods = searchResponse?.foods ? searchResponse.foods : [];\r\n\r\n        if (searchedFoods.length === 0) {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n\r\n        const searchResultFdcIds = [];\r\n        searchedFoods.forEach((result) => {\r\n            searchResultFdcIds.push(result.fdcId);\r\n        });\r\n\r\n        setTotalPages(searchResponse.totalPages);\r\n        setPageNumber(searchResponse.currentPage);\r\n\r\n        const foodsDetails = await getUSDAFoodDetailsBulk(searchResultFdcIds);\r\n        const usdaSearchResults = [];\r\n        for (var i = 0; i < searchedFoods.length; i++) {\r\n            const newUSDASearchResult = {\r\n                result: searchedFoods[i],\r\n                details: foodsDetails[i],\r\n            };\r\n            usdaSearchResults.push(newUSDASearchResult);\r\n        }\r\n\r\n        setSearchResults(usdaSearchResults);\r\n    };\r\n\r\n    const searchUSDAFood = async (keyword, pageSize, pageNumber) => {\r\n        const response = await fetch(serverURL + '/food/search', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                generalSearchInput: keyword,\r\n                pageSize: pageSize,\r\n                pageNumber: pageNumber >= 0 ? pageNumber : 1,\r\n                requireAllWords: true,\r\n            }),\r\n        });\r\n\r\n        return await response.json();\r\n    };\r\n\r\n    const getUSDAFoodDetailsBulk = async (fdcIds) => {\r\n        const foodsDetailRes = await fetch(serverURL + '/foods/detail', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                foods: fdcIds,\r\n            }),\r\n        });\r\n\r\n        return await foodsDetailRes.json();\r\n    };\r\n\r\n    const handleFoodKeywordChange = event => {\r\n        setFoodKeyword(event.target.value);\r\n    };\r\n\r\n    const handlePageNumberChange = event => {\r\n        setPageNumber(parseInt(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n            <span>\r\n                <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', margin: '10px' }}>\r\n                    <Form inline onSubmit={handleSubmitSearch}>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search for food\"\r\n                            className=\"mr-sm-2\"\r\n                            value={foodKeyword}\r\n                            onChange={handleFoodKeywordChange}\r\n                        />\r\n                        <Button type=\"submit\" style={{ margin: '5px' }}>Search</Button>\r\n                        <Button variant=\"secondary\" onClick={() => setSearchResults([])} style={{ margin: '5px' }}>Clear search</Button>\r\n                    </Form>\r\n                </span>\r\n                <div>\r\n                    {loading && <Spinner animation=\"border\" />}\r\n                    {searchResults && searchResults.length > 0 &&\r\n                        <span style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                            <span style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                {searchResults.map((searchResult) => (\r\n                                    <FoodSearchResult\r\n                                        showSelect={props.showSelect}\r\n                                        selectFood={props.selectFood}\r\n                                        fdcIds={props.fdcIds}\r\n                                        searchResult={searchResult}\r\n                                    />\r\n                                ))}\r\n                            </span>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                <Form inline onSubmit={handleSubmitPageChange}>\r\n                                    Page\r\n                                    <FormControl\r\n                                        type=\"number\"\r\n                                        style={{ margin: '5px', width: '80px' }}\r\n                                        value={pageNumber}\r\n                                        onChange={handlePageNumberChange}\r\n                                    />\r\n                                    of {totalPages}\r\n                                    <Button type=\"submit\" style={{ margin: '5px' }}>Go</Button>\r\n                                </Form>\r\n                                <div style={{ color: 'red' }}>{pageChangeError}</div>\r\n                            </div>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nexport function checkNutritionExists(nutrition) {\r\n    return nutrition && !(Object.keys(nutrition).length === 0 && nutrition.constructor === Object);\r\n};\r\n\r\nexport default function NutritionTable(props) {\r\n    const round = (nutrient) => {\r\n        return Math.round(nutrient * 100) / 100;\r\n    };\r\n\r\n    return (\r\n        <span style={{ display: 'block', overflowY: 'scroll', overflowX: 'hidden', maxHeight: props.height ? props.height : '300px', border: '1px solid lightGrey', maxWidth: '450px', margin: '0 auto' }}>\r\n\r\n        <Table>\r\n            <thead style={{ display: 'block', marginLeft: '27%', position: 'sticky', top: '0', backgroundColor: 'white' }}>\r\n                <tr>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Nutrient</th>\r\n                    <th style={{ position: 'sticky', top: '0' }}>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{ marginLeft: '25%', float: 'left' }}>\r\n                {!!props.nutrition.calories && <tr>\r\n                    <td>Calories</td>\r\n                    <td>{round(props.nutrition.calories)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.protein && <tr>\r\n                    <td>Protein</td>\r\n                    <td>{round(props.nutrition.protein)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.carbs && <tr>\r\n                    <td>Carbs</td>\r\n                    <td>{round(props.nutrition.carbs)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fat && <tr>\r\n                    <td>Fat</td>\r\n                    <td>{round(props.nutrition.fat)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sugar && <tr>\r\n                    <td>Sugar</td>\r\n                    <td>{round(props.nutrition.sugar)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.fiber && <tr>\r\n                    <td>Fiber</td>\r\n                    <td>{round(props.nutrition.fiber)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.sodium && <tr>\r\n                    <td>Sodium</td>\r\n                    <td>{round(props.nutrition.sodium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.calcium && <tr>\r\n                    <td>Calcium</td>\r\n                    <td>{round(props.nutrition.calcium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.iron && <tr>\r\n                    <td>Iron</td>\r\n                    <td>{round(props.nutrition.iron)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.cholesterol && <tr>\r\n                    <td>Cholesterol</td>\r\n                    <td>{round(props.nutrition.cholesterol)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.potassium && <tr>\r\n                    <td>Potassium</td>\r\n                    <td>{round(props.nutrition.potassium)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminA && <tr>\r\n                    <td>Vitamin A</td>\r\n                    <td>{round(props.nutrition.vitaminA)}</td>\r\n                </tr>}\r\n                {!!props.nutrition.vitaminC && <tr>\r\n                    <td>Vitamin C</td>\r\n                    <td>{round(props.nutrition.vitaminC)}</td>\r\n                </tr>}\r\n            </tbody>\r\n        </Table>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable from './NutritionTable';\r\n\r\nexport default function EditableFood(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <Card\r\n            style={{ width: '30%', margin: '10px' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>{props.food.fdcId}</Card.Header>\r\n                    {props.food.fdcId && <span style={{ margin: '5px' }}>FDC ID: {props.food.fdcId}<br /></span>}\r\n                    {props.food.name && <span style={{ margin: '5px' }}>Name: {props.food.name}<br /></span>}\r\n                    {props.food.details && <span style={{ margin: '5px' }}>Description: {props.food.details.description}<br /></span>}\r\n                    <span style={{ margin: '5px' }}>Calories: {props.food.nutrition.calories}<br /></span>\r\n\r\n                    {!displayNutritionInfo && \r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                            <br />\r\n                        </span>\r\n                    }\r\n                    {displayNutritionInfo && <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>}\r\n\r\n                    <span>\r\n                        Serving size:\r\n                        <FormControl\r\n                            type=\"number\"\r\n                            placeholder={100}\r\n                            style={{ width: '80px', display: 'inline-block', margin: '5px' }}\r\n                            value={props.food.serving}\r\n                            onChange={(e) => props.updateServingSize(props.food, e.target.value)}\r\n                        />\r\n                        g\r\n                    </span><br />\r\n                <Button variant=\"danger\" onClick={() => props.removeFood(props.food._id ? props.food._id : props.food.fdcId)}>Remove</Button>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport FoodSearch from './FoodSearch';\r\nimport { NutrientIds } from './FoodSearchResult';\r\nimport EditableFood from './EditableFood';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nconst mealOptions = [\r\n    { value: 'breakfast', label: 'Breakfast' },\r\n    { value: 'lunch', label: 'Lunch' },\r\n    { value: 'dinner', label: 'Dinner' }\r\n]\r\n\r\nexport default function EditMealForm(props) {\r\n    const [foods, setFoods] = useState(props.meal?.foods ? props.meal.foods : []);\r\n    const [mealName, setMealName] = useState(props.meal?.name ? props.meal.name : '');\r\n    const [mealNutrition, setMealNutrition] = useState(props.meal?.nutrition ? props.meal.nutrition : {});\r\n    const [fdcIds, setFdcIds] = useState([]);\r\n\r\n    const updateMealNutrition = () => {\r\n        const nutrition = {\r\n            calories: 0,\r\n            protein: 0,\r\n            carbs: 0,\r\n            fat: 0,\r\n            sugar: 0,\r\n            fiber: 0,\r\n            sodium: 0,\r\n            calcium: 0,\r\n            iron: 0,\r\n            cholesterol: 0,\r\n            potassium: 0,\r\n            vitaminA: 0,\r\n            vitaminC: 0,\r\n        };\r\n        foods.forEach((food) => {\r\n            nutrition.calories += food.nutrition.calories;\r\n            nutrition.protein += food.nutrition.protein;\r\n            nutrition.carbs += food.nutrition.carbs;\r\n            nutrition.fat += food.nutrition.fat;\r\n            nutrition.sugar += food.nutrition.sugar;\r\n            nutrition.fiber += food.nutrition.fiber;\r\n            nutrition.sodium += food.nutrition.sodium;\r\n            nutrition.calcium += food.nutrition.calcium;\r\n            nutrition.iron += food.nutrition.iron;\r\n            nutrition.cholesterol += food.nutrition.cholesterol;\r\n            nutrition.potassium += food.nutrition.potassium;\r\n            nutrition.vitaminA += food.nutrition.vitaminA;\r\n            nutrition.vitaminC += food.nutrition.vitaminC;\r\n        });\r\n\r\n        setMealNutrition(nutrition);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const formattedFoods = foods.map((food) => {\r\n            food.name = food.name ? food.name : food.details.description;\r\n            return food;\r\n        });\r\n        const meal = {\r\n            _id: props.meal?._id,\r\n            name: mealName,\r\n            foods: formattedFoods,\r\n            nutrition: mealNutrition,\r\n        };\r\n        props.submit(meal);\r\n    };\r\n\r\n    const updateServingSize = (food, newServingSize) => {\r\n        const newFoods = foods.map((oldFood) => {\r\n            const isMatch = food._id ? oldFood._id === food._id : oldFood.fdcId === food.fdcId;\r\n            if (isMatch) {\r\n                food.serving = parseInt(newServingSize);\r\n                food.nutrition = {\r\n                    calories: getRoundedWholeNutrient(oldFood.usdaNutrition.calories, newServingSize),\r\n                    protein: getRounded2DecNutrient(oldFood.usdaNutrition.protein, newServingSize),\r\n                    carbs: getRounded2DecNutrient(oldFood.usdaNutrition.carbs, newServingSize),\r\n                    fat: getRounded2DecNutrient(oldFood.usdaNutrition.fat, newServingSize),\r\n                    sugar: getRounded2DecNutrient(oldFood.usdaNutrition.sugar, newServingSize),\r\n                    fiber: getRounded2DecNutrient(oldFood.usdaNutrition.fiber, newServingSize),\r\n                    sodium: getRoundedWholeNutrient(oldFood.usdaNutrition.sodium, newServingSize),\r\n                    calcium: getRoundedWholeNutrient(oldFood.usdaNutrition.calcium, newServingSize),\r\n                    iron: getRounded2DecNutrient(oldFood.usdaNutrition.iron, newServingSize),\r\n                    cholesterol: getRoundedWholeNutrient(oldFood.usdaNutrition.cholesterol, newServingSize),\r\n                    potassium: getRoundedWholeNutrient(oldFood.usdaNutrition.potassium, newServingSize),\r\n                    vitaminA: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminA, newServingSize),\r\n                    vitaminC: getRounded2DecNutrient(oldFood.usdaNutrition.vitaminC, newServingSize),\r\n                };\r\n                return food;\r\n            }\r\n            return oldFood;\r\n        });\r\n        setFoods(newFoods);\r\n        updateMealNutrition();\r\n    };\r\n\r\n    const getRounded2DecNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient * servingSize) / 100;\r\n    };\r\n\r\n    const getRoundedWholeNutrient = (nutrient, servingSize) => {\r\n        return Math.round(nutrient / 100 * servingSize);\r\n    };\r\n\r\n    const addFood = (food, foodDetails) => {\r\n        const calories = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.ENERGY)[0]?.amount;\r\n        const protein = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.PROTEIN)[0]?.amount;\r\n        const carbs = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CARBOHYDRATE)[0]?.amount;\r\n        const fat = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FAT)[0]?.amount;\r\n        const sugar = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SUGAR)[0]?.amount;\r\n        const fiber = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.FIBER)[0]?.amount;\r\n        const sodium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.SODIUM)[0]?.amount;\r\n        const calcium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CALCIUM)[0]?.amount;\r\n        const iron = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.IRON)[0]?.amount;\r\n        const cholesterol = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.CHOLESTEROL)[0]?.amount;\r\n        const potassium = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.POTASSIUM)[0]?.amount;\r\n        const vitaminA = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_A)[0]?.amount;\r\n        const vitaminC = foodDetails?.foodNutrients?.filter((foodNutrient) => foodNutrient?.nutrient.id === NutrientIds.VITAMIN_C)[0]?.amount;\r\n\r\n\r\n        const newFood = {\r\n            brand: food.brandOwner,\r\n            ingredients: food.ingredients,\r\n            fdcId: food.fdcId,\r\n            serving: 100,\r\n            nutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            usdaNutrition: {\r\n                calories: calories ? calories : 0,\r\n                protein: protein ? protein : 0,\r\n                carbs: carbs ? carbs : 0,\r\n                fat: fat ? fat : 0,\r\n                sugar: sugar ? sugar : 0,\r\n                fiber: fiber ? fiber : 0,\r\n                sodium: sodium ? sodium : 0,\r\n                calcium: calcium ? calcium : 0,\r\n                iron: iron ? iron : 0,\r\n                cholesterol: cholesterol ? cholesterol : 0,\r\n                potassium: potassium ? potassium : 0,\r\n                vitaminA: vitaminA ? vitaminA : 0,\r\n                vitaminC: vitaminC ? vitaminC : 0,\r\n            },\r\n            details: foodDetails,\r\n        };\r\n        setFoods(foods => [...foods, newFood]);\r\n        setFdcIds(fdcIds => [...fdcIds, food.fdcId]);\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(newFood, 1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromAddForm = (garbageFdcId) => {\r\n        const removedFood = foods.filter(food => food.fdcId === garbageFdcId)[0];\r\n\r\n        setFoods(foods.filter(food => food.fdcId !== garbageFdcId));\r\n        setFdcIds(fdcIds.filter(fdcId => fdcId !== garbageFdcId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const removeFoodFromEditForm = (garbageId) => {\r\n        const removedFood = foods.filter(food => food._id === garbageId)[0];\r\n        setFoods(foods.filter(food => food._id !== garbageId));\r\n\r\n        const newMealNutrition = calculateNewMealNutrition(removedFood, -1);\r\n        setMealNutrition(newMealNutrition);\r\n    };\r\n\r\n    const calculateNewMealNutrition = (updatedFood, sign) => {\r\n        return {\r\n            calories: calculateNewNutrient(mealNutrition.calories, updatedFood.nutrition.calories, sign),\r\n            protein: calculateNewNutrient(mealNutrition.protein, updatedFood.nutrition.protein, sign),\r\n            carbs: calculateNewNutrient(mealNutrition.carbs, updatedFood.nutrition.carbs, sign),\r\n            fat: calculateNewNutrient(mealNutrition.fat, updatedFood.nutrition.fat, sign),\r\n            sugar: calculateNewNutrient(mealNutrition.sugar, updatedFood.nutrition.sugar, sign),\r\n            fiber: calculateNewNutrient(mealNutrition.fiber, updatedFood.nutrition.fiber, sign),\r\n            sodium: calculateNewNutrient(mealNutrition.sodium, updatedFood.nutrition.sodium, sign),\r\n            calcium: calculateNewNutrient(mealNutrition.calcium, updatedFood.nutrition.calcium, sign),\r\n            iron: calculateNewNutrient(mealNutrition.iron, updatedFood.nutrition.iron, sign),\r\n            cholesterol: calculateNewNutrient(mealNutrition.cholesterol, updatedFood.nutrition.cholesterol, sign),\r\n            potassium: calculateNewNutrient(mealNutrition.potassium, updatedFood.nutrition.potassium, sign),\r\n            vitaminA: calculateNewNutrient(mealNutrition.vitaminA, updatedFood.nutrition.vitaminA, sign),\r\n            vitaminC: calculateNewNutrient(mealNutrition.vitaminC, updatedFood.nutrition.vitaminC, sign),\r\n        };\r\n    };\r\n\r\n    const calculateNewNutrient = (mealNutrient, foodNutrient, sign) => {\r\n        return (mealNutrient ? mealNutrient : 0) + sign * (foodNutrient ? foodNutrient : 0);\r\n    };\r\n\r\n    return (\r\n        <div style={{ 'margin': '50px' }}>\r\n            <div>\r\n                <div style={{ borderStyle: 'solid', borderWidth: '1px', padding: '20px' }}>\r\n                    <Dropdown onSelect={setMealName} value={mealName}>\r\n                        <Dropdown.Toggle style={{ backgroundColor: 'white', color: 'black' }}>\r\n                            {mealName ? mealName : \"Meal\"}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {mealOptions.map((option) => (\r\n                                <Dropdown.Item key={option.label} eventKey={option.label}>{option.label}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    {checkNutritionExists(mealNutrition) &&\r\n                        <div>\r\n                            Nutrition summary\r\n                            <NutritionTable nutrition={mealNutrition} />\r\n                        </div>\r\n                    }\r\n\r\n                    <div style={{ marginTop: '20px' }}>Foods</div>\r\n                    <span style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        {foods.map((food) => (\r\n                            <EditableFood\r\n                                key={food._id ? food._id : food.fdcId}\r\n                                food={food}\r\n                                updateServingSize={updateServingSize}\r\n                                removeFood={props.meal ? removeFoodFromEditForm : removeFoodFromAddForm}\r\n                            />\r\n                        ))}\r\n                    </span>\r\n\r\n                    <FoodSearch\r\n                        selectFood={addFood}\r\n                        showSelect\r\n                        fdcIds={fdcIds}\r\n                    />\r\n\r\n                    <div style={{ paddingTop: '20px' }}>\r\n                        <Button variant=\"secondary\" type=\"button\" onClick={props.cancel} style={{ marginRight: '5px' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                            {!props.meal && 'Add Meal'}\r\n                            {props.meal && 'Update Meal'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nexport default function Food(props) {\r\n    const [displayNutritionInfo, setDisplayNutritionInfo] = useState(false);\r\n\r\n    return (\r\n        <span>\r\n            {props.food.name}<br />\r\n            {<span>\r\n                {props.food.group && <span>group: {props.food.group}<br /></span>}\r\n                serving: {props.food.serving}<br />\r\n                calories: {props.food?.nutrition?.calories}<br />\r\n\r\n                {!displayNutritionInfo &&\r\n                    <span>\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(true)}>See nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n                {displayNutritionInfo && checkNutritionExists(props.food.nutrition) &&\r\n                    <span>\r\n                        Food nutrition\r\n                        <NutritionTable nutrition={props.food.nutrition} height='180px' />\r\n                        <Button variant=\"secondary\" onClick={() => setDisplayNutritionInfo(false)}>Hide nutrition</Button>\r\n                        <br />\r\n                    </span>\r\n                }\r\n            </span>}\r\n        </span>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport Food from './Food';\r\n\r\nexport default function Meal(props) {\r\n    return (\r\n        <Card\r\n            style={{ width: '24rem', margin: '0 auto' }}\r\n            className=\"mb-2\"\r\n        >\r\n            <Card.Header>\r\n                <span>{props.meal.name}</span><br />\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.updateMeal(props.meal)}>\r\n                    <FontAwesomeIcon icon={faEdit} style={{ color: 'black' }} />\r\n                </Button>\r\n                <Button variant=\"link\" size=\"sm\" onClick={() => props.deleteMeal(props.meal._id)}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} style={{ color: 'black' }} />\r\n                </Button>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.meal?.foods?.map((food, k) => (\r\n                        <span key={k}>\r\n                            <Food food={food} />\r\n                        </span>\r\n                    ))}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <div>\r\n                Meal nutrition\r\n                {checkNutritionExists(props.meal?.nutrition) && <NutritionTable nutrition={props.meal.nutrition} />}\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SignInForm(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.handleSubmit(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={handleEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SignInForm from './SignInForm';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverURL } from './App';\r\n\r\nexport function getUserFromLocalStorage() {\r\n    return localStorage.getItem('currentUser');\r\n}\r\n\r\nexport default function SignIn(props) {\r\n    const history = useHistory();\r\n    const [key, setKey] = useState('login');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (email, password, type) => {\r\n        const response = await fetch(serverURL + '/' + type, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            })\r\n        });\r\n\r\n        const responseText = await response.text();\r\n\r\n        if ((type === 'login' && response.status === 302) ||\r\n            (type === 'signup' && response.status === 201)) {\r\n            localStorage.setItem('currentUser', JSON.stringify(responseText));\r\n            props.setAuthenticated(true);\r\n            history.push('/days');\r\n        } else {\r\n            setError(\"error with \" + type + \"\\n\" + responseText);\r\n        }\r\n    };\r\n\r\n    const handleLoginSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'login');\r\n    };\r\n\r\n    const handleSignupSubmit = (email, password) => {\r\n        handleSubmit(email, password, 'signup');\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '50%', height: 'auto' }}>\r\n            <Tabs\r\n                id=\"signin-tabs\"\r\n                activeKey={key}\r\n                onSelect={(k) => {\r\n                    setKey(k);\r\n                    setError('');\r\n                }}\r\n            >\r\n                <Tab eventKey=\"login\" title=\"Login\">\r\n                    <SignInForm\r\n                        handleSubmit={handleLoginSubmit}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"signup\" title=\"Sign Up\">\r\n                    <SignInForm\r\n                        handleSubmit={handleSignupSubmit}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n            {error && <div style={{ color: \"red\" }}>sign in unsuccessful :(</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport MyNavbar from './MyNavbar';\r\nimport EditMealForm from './EditMealForm';\r\nimport Meal from './Meal';\r\nimport NutritionTable, { checkNutritionExists } from './NutritionTable';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport { serverURL } from './App';\r\n\r\nexport default function Days(props) {\r\n    const [day, setDay] = useState();\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [showAddMealForm, setShowAddMealForm] = useState(false);\r\n    const [editMeal, setEditMeal] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchDay(selectedDate);\r\n        // disabled lint on next line because otherwise lint would complain about fetchDays being a missing dependency\r\n        // when in reality, fetchDays is a method defined separately underneath, since it is used in other places\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const fetchDay = async (date) => {\r\n        const fetchedDay = await getDay(date);\r\n        setDay(fetchedDay);\r\n    };\r\n\r\n    const getDay = async (date) => {\r\n        const dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getUTCDate();\r\n        const response = await fetch(serverURL + '/days/' + dateStr + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const responseJSON = await response.json();\r\n        if (responseJSON._id === \"000000000000000000000000\") { // response for nonexistent record\r\n            return null;\r\n        }\r\n        return responseJSON;\r\n    };\r\n\r\n    const handleSelectedDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        fetchDay(date);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const onAddMealButtonClick = () => {\r\n        setShowAddMealForm(true);\r\n    };\r\n\r\n    const submitAddMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals?user=' + getUserFromLocalStorage(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const cancelAddMealForm = () => {\r\n        setShowAddMealForm(false);\r\n    };\r\n\r\n    const submitEditMealForm = async (meal) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + meal._id + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(meal),\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n        setEditMeal('');\r\n    };\r\n\r\n    const deleteMeal = async (mealId) => {\r\n        const dateStr = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getUTCDate();\r\n\r\n        await fetch(serverURL + '/days/' + dateStr + '/meals/' + mealId + '?user=' + getUserFromLocalStorage(), {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        fetchDay(selectedDate);\r\n    };\r\n\r\n    const updateMeal = (meal) => {\r\n        if (editMeal) {\r\n            setEditMeal('');\r\n        } else {\r\n            setEditMeal(meal);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            <div style={{ margin: '10px' }}>\r\n                <DatePicker\r\n                    selected={selectedDate}\r\n                    onChange={handleSelectedDateChange}\r\n                />\r\n            </div>\r\n            {showAddMealForm && <EditMealForm\r\n                submit={submitAddMealForm}\r\n                cancel={cancelAddMealForm}\r\n            />}\r\n            {editMeal && <EditMealForm\r\n                submit={submitEditMealForm}\r\n                cancel={() => setEditMeal('')}\r\n                meal={editMeal}\r\n            />}\r\n            {!showAddMealForm && !editMeal &&\r\n                <Button onClick={onAddMealButtonClick} style={{ margin: '10px' }}>\r\n                    Add meal\r\n                </Button>\r\n            }\r\n            {!showAddMealForm && !editMeal && day && <div>\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {day.meals && day.meals.map((meal, j) => (\r\n                    <Meal\r\n                        key={j}\r\n                        meal={meal}\r\n                        updateMeal={updateMeal}\r\n                        deleteMeal={deleteMeal}\r\n                    />\r\n                ))}\r\n                </div>\r\n                <div>\r\n                    {checkNutritionExists(day.nutrition) &&\r\n                        <span>\r\n                            Daily nutrition summary\r\n                            <NutritionTable nutrition={day.nutrition} />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>}\r\n            {!day && <div>no data for this date</div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport MyNavbar from './MyNavbar';\r\nimport FoodSearch from './FoodSearch';\r\n\r\nexport default function FoodSearchPage(props) {\r\n    const [selectedFood, setSelectedFood] = useState('');\r\n\r\n    const onFoodSelected = (food) => {\r\n        setSelectedFood(food.FdcId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar setAuthenticated={props.setAuthenticated} />\r\n            {selectedFood && <span>selected food fdc ID: {selectedFood}</span>}\r\n            <FoodSearch selectFood={onFoodSelected} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SignIn from './SignIn';\r\n\r\nexport default function HomePage(props) {\r\n    return (\r\n        <div style={{ margin: '3%' }}>\r\n            <h3>Refactored Spoon</h3>\r\n            <div>an app to help you track what you eat and provide nutritional insights</div>\r\n            <span style={{ display: 'flex', justifyContent: 'center', margin: '5%' }}>\r\n                <SignIn setAuthenticated={props.setAuthenticated} />\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Days from './Days';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport FoodSearchPage from './FoodSearchPage';\r\nimport { getUserFromLocalStorage } from './SignIn';\r\nimport HomePage from './HomePage';\r\n\r\nexport const serverURL = \"https://shielded-earth-02834.herokuapp.com\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(getUserFromLocalStorage());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} >\r\n        <Route exact path=\"/\" render={() => <HomePage setAuthenticated={setIsAuthenticated} />} />\r\n        {!isAuthenticated &&\r\n          <span>\r\n            <Redirect to=\"/\" />\r\n          </span>\r\n        }\r\n        {isAuthenticated &&\r\n          <span>\r\n            <Route path=\"/days\" render={() => <Days setAuthenticated={setIsAuthenticated} />} />\r\n            <Route path=\"/foodsearch\" render={() => <FoodSearchPage setAuthenticated={setIsAuthenticated} />} />\r\n          </span>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}